{"version":3,"sources":["components/SelectField.js","components/Calendar.js","providers/Base.js","helpers/String.js","providers/Crud.js","components/Message.js","providers/handler.js","providers/MaintenanceOrder.js","components/Button.js","helpers/Object.js","components/Icon.js","components/TextField.js","components/Table.js","helpers/Date.js","helpers/MaintenanceOrder.js","components/Loading.js","components/CheckBox.js","components/ToolTip.js","components/Operations.js","components/Header.js","components/Label.js","components/Order.js","Dashboard.js","components/Card.js","components/CrudButtons.js","providers/MachineType.js","components/SearchTable.js","components/AutoComplete.js","crud/MachineType.js","providers/MachineComponents.js","crud/MachineComponents.js","providers/Sector.js","crud/Sector.js","providers/InstallationArea.js","crud/InstallationArea.js","providers/UnitMeasurement.js","crud/UnitMeasurement.js","providers/Part.js","crud/Parts.js","providers/Note.js","crud/Note.js","providers/Operation.js","crud/Operation.js","providers/OrderType.js","providers/Cause.js","crud/OrderType.js","crud/Cause.js","providers/Diagnostic.js","crud/Diagnostic.js","providers/Classification.js","providers/Machine.js","crud/Classification.js","crud/Machine.js","providers/SuperiorMachine.js","crud/SuperiorMachine.js","providers/WorkCenter.js","crud/WorkCenter.js","providers/SafetyParameter.js","crud/SafetyParameter.js","components/RadioGroup.js","providers/User.js","crud/User.js","providers/OrderLayout.js","crud/OrderLayout.js","components/Tabs.js","crud/Modal.js","crud/MaintenanceOrder.js","ShowCards.js","login/Logout.js","components/Menu.js","providers/Auth.js","login/Login.js","app.js","index.js","helpers/SearchModel.js"],"names":["C_SelectField","props","onChange","bind","pValue","console","log","this","target","name","value","id","key","label","inputStyle","listStyle","style","disabled","placeholder","menuItems","list","required","errorText","helpText","className","itemLabel","labelElement","error","length","itemValue","valueElement","simplifiedMenu","sameWidth","toggleStyle","onClick","onBlur","onFocus","onKeyDown","Component","C_Calendar","stringV","fontSize","displayMode","inline","notInline","fullWidth","undefined","lineDirection","rightIcon","cancelLabel","autoOk","disableScrollLocking","locales","defaultValue","React","BaseProvider","moduleAPI","module","baseUrl","cookies","Cookies","getToken","get","token","set","path","response","headers","setToken","Error","data","success","message","callback","checkResponse","atualizouToken","updateToken","dateFrom","dateTo","dateTimeFrom","dateTimeTo","keepValues","Date","toISOString","split","mountBetweenSetence","valueFrom","valueTo","StringHelper","text","allWords","toLocaleLowerCase","firstLetter","substr","toLocaleUpperCase","wordsArray","map","word","join","size","characterToFit","toString","padStart","params","queryString","URLSearchParams","backgroundColor","position","top","left","right","bottom","zIndex","width","padding","color","textAlign","CrudProvider","handleRequest","axios","getHeaders","formatParamsToQueryString","obj","post","patch","delete","MessageModal","title","confirmationCallBack","confirmAlert","buttons","callBack","closeOnClickOutside","closeOnEscape","arrayMessage","childrenElement","HandlerProvider","provider","entityName","object","successCallBack","Number","alreadyRegistered","action","FirstLetterUpperCase","execute","update","create","confirmation","a","getList","functionToExecute","information","arrayOfMessage","Array","forEach","push","informationList","MaintenanceOrderProvider","C_Button","raised","primary","secondary","iconEl","icon","C_ButtonFloat","floating","tooltipLabel","tooltipPosition","forceIconFontSize","iconSize","onMouseEnter","onMouseLeave","C_MenuButton","state","options","listItem","item","i","primaryText","onClickItem","leftIcon","cascading","menuStyle","anchor","x","MenuButton","HorizontalAnchors","INNER_LEFT","y","VerticalAnchors","TOP","Positions","TOP_RIGHT","ObjectHelper","exclude","hasOwnProperty","travel","regexp","String","prototype","call","filter","Boolean","reduce","res","result","property","sort","b","C_Icon","forceIconSize","C_TextField","showError","cursor","type","rows","css","C_Table","handlePagination","start","rowsPerPage","setState","pagination","currentRowsPerPage","titleSize","content","columns","hasFilter","showPagination","showEffect","paginatedData","filterData","slice","nextProps","field","filterField","isValid","Object","entries","filterValue","contentRaw","filterRaw","toLowerCase","normalize","replace","includes","format","getPropertys","getPaginatedData","defaultStyleRows","border","borderRadius","baseId","selectable","colum","header","getValueProperty","e","rowsPerPageLabel","onPagination","margin","DateHelper","inputDate","date","getDate","day","JustifyLeft","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","MaintenanceOrderHelper","prop","getPriority","getStatus","getColorPriority","getLayoutType","default","route","low","medium","high","urgent","created","assumed","started","paused","stopped","canceled","signatured","finished","ordenatedPriority","priority","dateTimeA","openedDate","getTime","dateTimeB","C_Loading","scale","footer","fontWeight","C_CheckBox","checked","C_Switch","C_ToolTip","context","html","tooltipStyle","tooltip","unmountHTMLWhenHide","trigger","arrow","onShow","delay","theme","interactive","distance","duration","children","C_Operations","viewOperations","orderId","operations","createOperation","operation","onClose","justifyContent","display","alignItems","height","isEditing","showOperations","equipments","edit","save","ViewOperations","marginTop","marginRight","description","paddingRight","CrudOperation","selectedEquipment","equipment","sendOperation","listEquipments","descriptionEquipment","orderEquipment","listOperations","planningTime","executeTime","note","paddingTop","executed","C_Header","noMargin","fontFamily","C_Label","maxWidth","marginLeft","subtitle","iconStyle","C_MaintenanceOrder","order","expandedDetails","expandedEquipments","expandEquipment","backgroundModal","backgroundDefault","getOrder","orderNumber","itemSelected","showBackgroundColor","HelperOM","translate","fontStyle","orderLayout","classification","orderStatus","solicitationUser","workCenter","formatDateTime","code","superiorEquipment","isStopped","installationArea","sector","machineType","defectOrigin","defectSymptom","needStopping","Dashboard","listStatus","listPriority","to","from","selectedStatus","selectedPriority","showOrdersList","listOrders","calculateHeight","document","getElementById","clientHeight","Math","round","sendData","mountBetweenDate","orders","sortOrders","showLoading","orderDetails","formatDate","showOrderDetails","borderBottom","paddingBottom","flexWrap","boxShadow","event","minWidth","marginBottom","paddingLeft","whiteSpace","textOverflow","overflow","C_Card","avatar","hideAvatar","contentStyle","avatarStyle","role","C_CrudButtons","crudLevel","onDelete","onClean","onSave","MachineTypeProvider","C_SearchTable","extraFunction","minHeight","C_AutoComplete","filterText","dataLabel","indexer","search","toggleIcon","onAutocomplete","onChangeAutoComplete","onClickIcon","tableSelected","JSON","stringify","Fuse","keys","weight","suggestion","suggestionIndex","matches","matched","find","element","dataSelected","isArray","searchColumns","customUI","objectValue","deleteKeys","CreateMachineType","visible","fields","autocomplete","machineTypeColumns","loadList","hideModal","clean","autocompleteSelect","clearFields","preventDefault","dialogStyle","aria-labelledby","fixed","colored","actions","ref","el","form","onSubmit","formPreventDefault","block","paddedBlock","MachineComponentsProvider","CreateMachineComponents","machineTypeList","machineTypeProvider","loadListMachineType","autocompleteId","autocompleteMachineType","machineComponent","inputName","SectorProvider","CreateSector","onHide","InstallationAreaProvider","CreateInstallationArea","sectorList","sectorProvider","loadlListSector","autocompleteSector","UnitMeasurementProvider","CreateUnitMeasurement","unitMeasurement","PartProvider","CreateParts","measurementUnit","unitMeasurementList","unitProvider","loadListUnits","autocompleteUnit","part","NoteProvider","CreateDefaultNote","OperationProvider","CreateDefaultOperation","OrderTypeProvider","CauseProvider","CreateDefectCause","cause","machineTypeId","DiagnosticProvider","CreateDefectDiagnostic","diagnostic","ClassificationProvider","MachineProvider","CreateMachine","equipmentColumns","machine","SuperiorMachineProvider","CreateSuperiorMachine","areasList","areaProvider","loadListArea","autocompleteArea","superiorMachine","WorkCenterProvider","CreateWorkCenter","SafetyParameterProvider","CreateSafetyParameter","types","safetyParameter","useAlways","entityClass","entityId","C_RadioGroup","option","UserProvider","CreateUser","loadDefaultValues","getdisplayDate","generatePassword","password","gender","user","birthDate","arrayData","displayBirthDate","email","contact","employeeBadge","forceChangePassword","dt","random","OrderLayoutProvider","CreateOrderLayout","layouts","orderLayoutType","C_Tabs","tabs","labelTabStyle","textTransform","tab","C_Modal","CreateMaintenanceOrder","styleMessage","completeOrder","completeWorkcenter","orderEquipments","listWorkcenter","index","removeEquipment","providerLayout","providerUser","providerWorkcenter","loadingData","completeField","listUsers","res2","res3","res4","completeEquipment","splice","errors","checkData","orderType","orderClassification","layout","getOrderLayout","layoutType","findIndex","addEquiment","showSuccess","selectedTab","pushEquipment","showMessage","AddEquipments","completeSymptom","completeCause","completeSuperiorEquipment","completeArea","providerEquipment","providerSuperiorEquipment","providerArea","providerCause","providerSypmtom","getEquipment","listSuperiorEquipments","listAreas","listCauses","listSymptoms","res5","maxHeight","overflowX","defectOriginNote","defectSymptomNote","ShowCards","unmountModal","component","ReactDOM","render","getDOMToRender","unmountComponentAtNode","renderComponent","Logout","logout","Main","styled","main","expanded","C_Menu","onSelect","selected","onToggle","onLogout","menu","menuItem","eventKey","float","location","history","Fragment","Toggle","Nav","renderSelectedItem","AuthProvider","username","Login","onLogin","authProvider","login","alert","onSuccess","backgroundImage","backgroundSize","backgroundRepeat","opacity","App","remove","WebFontLoader","load","google","families","exports"],"mappings":"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","file":"static/js/main.9014f113.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport SelectField from 'react-md/lib/SelectFields';\nimport PropTypes from 'prop-types';\nimport '../index.css';\n\nclass C_SelectField extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n  }\n\n  onChange(pValue) {\n    console.log(\"pValue\",pValue);\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <SelectField\n          id={this.props.name}\n          // position={this.props.position ? this.props.position : SelectField.Positions.BOTTOM_LEFT}\n          key={this.props.key}\n          name={this.props.name}\n          label={this.props.label}\n          inputStyle={this.props.inputStyle}\n          listStyle={this.props.listStyle}\n          style={this.props.style}\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          menuItems={this.props.list}\n          value={this.props.value}\n          onChange={this.onChange}\n          required={this.props.required}\n          errorText={this.props.errorText}\n          helpText={this.props.helpText}\n          className={this.props.className}\n          itemLabel={this.props.labelElement}\n          error={(this.props.errorText && this.props.errorText.length > 0)}\n          itemValue={this.props.valueElement}\n          simplifiedMenu={this.props.simplifiedMenu}\n          sameWidth={true}\n          toggleStyle={this.props.toggleStyle}\n          onClick={this.props.onClick}\n          onBlur={this.props.onBlur}\n          onFocus={this.props.onFocus}\n          onKeyDown={this.props.onKeyDown}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default C_SelectField;","import React, { PureComponent } from 'react';\nimport { DatePicker, TimePicker} from 'react-md/lib/Pickers';\nimport '../index.css';\nimport { FontIcon } from 'react-md';\n// import './Button.css';\n\nexport class C_Calendar extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(stringV, pValue) {\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n\n  render() {\n    var inputStyle = this.props.inputStyle;\n\n    if (!inputStyle) inputStyle = {};\n\n    if (!inputStyle.fontSize) inputStyle.fontSize = 15;\n\n    return (\n      <DatePicker\n        id={this.props.name}\n        displayMode={this.props.displayMode}\n        name={this.props.name}\n        label={this.props.label}\n        inline={this.props.notInline && this.props.fullWidth ? undefined : true}\n        lineDirection={this.props.lineDirection ? this.props.lineDirection : \"center\"}\n        className={this.props.className}\n        inputStyle={this.props.inputStyle}\n        rightIcon={this.props.rightIcon}\n        cancelLabel={this.props.cancelLabel}\n        onChange={this.onChange}\n        style={this.props.style}\n        value={this.props.value}\n        fullWidth={this.props.fullWidth}\n        autoOk={true}\n        disableScrollLocking\n        locales=\"pt-BR\"\n        defaultValue={this.props.defaultValue}\n      />\n    );\n  }\n}\n\nexport class C_TimePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n    console.log(\"C_TimePicker -> constructor -> this.props\", this.props)\n  }\n\n  onChange(pValue) {\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n\n  render() {\n    return (\n      <TimePicker\n        icon={this.props.icon ? <FontIcon style={{ fontSize: 25, cursor: \"pointer\" }}>{this.props.icon}</FontIcon> : undefined}\n        onChange={this.onChange}\n        id={this.props.name}\n        name={this.props.name}\n        label={this.props.label}\n        value={this.props.value}\n        className={this.props.className}\n        displayMode=\"portrait\"\n        showSeconds\n      />\n    );\n  }\n}\n","import Cookies from 'universal-cookie';\n\nexport class BaseProvider {\n\n  constructor(moduleAPI) {\n    this.module = moduleAPI\n    this.baseUrl = `http://127.0.0.1:4000/api/v1/${this.module}`\n    this.cookies = new Cookies();\n  }\n\n  getHeaders() {\n    return {\n      'Content-Type': 'application/json',\n      'token': this.getToken()\n    }\n  }\n\n  getToken() {\n    return this.cookies.get('token')\n  }\n\n  setToken(token) {\n    this.cookies.set('token', token, { path: '/' })\n  }\n\n  updateToken(response) {\n    return response.headers.token\n      && this.setToken(response.headers.token)\n  }\n\n  checkResponse(response) {\n    if (response === undefined || response === null || typeof response !== 'object') {\n      console.log(\"Não foi possível executar a requisição\")\n      throw new Error(\"Não foi possível executar a requisição\")\n    }\n\n    let { data } = response\n    if (!data.success) {\n      // Retorno do request do axios\n      console.log('!data.success')\n      console.log(data)\n      throw new Error(data.error.message? data.error.message : data.error)\n    }\n\n    if (data.data.success == false) {\n      // Retorno do request do server\n      console.log('!data.data.success')\n      console.log(data.data)\n      throw new Error(data.data.message || data.data.error)\n    }\n  }\n\n  async handleRequest(callback) {\n    try {\n      const response = await callback;\n\n      this.checkResponse(response)\n\n      let atualizouToken = this.updateToken(response)\n      console.log(\"TCL: BaseProvider -> get -> atualizouToken\", atualizouToken)\n\n      if (response.data.data !== undefined) {\n        return response.data\n      }\n\n      return response;\n    } catch (error) {\n      console.log(\"TCL: handleRequest -> error\", error)\n      return {\n        success: false,\n        error: error\n      }\n    }\n  }\n\n  mountBetweenDate(dateFrom,dateTo, keepValues = false) {\n    let dateTimeFrom,dateTimeTo;\n\n    if (!keepValues) {\n      dateTimeFrom = `${new Date(dateFrom).toISOString().split('T')[0]}T00:00:00`\n      dateTimeTo = `${new Date(dateTo).toISOString().split('T')[0]}T23:59:59`\n    } else {\n      dateTimeFrom = dateFrom\n      dateTimeTo = dateTo\n    }\n\n    return this.mountBetweenSetence(dateTimeFrom,dateTimeTo);\n  }\n\n  mountBetweenSetence(valueFrom,valueTo) {\n    return `between(${valueFrom}, ${valueTo})`;\n  }\n}","export class StringHelper {\n\n  static FirstLetterUpperCase(text, allWords = true) {\n\n    if (!allWords) {\n      if (text.length < 3) {\n        return text.toLocaleLowerCase()\n      }\n\n      let firstLetter = text.substr(0, 1).toLocaleUpperCase()\n      return `${firstLetter}${text.substr(1).toLocaleLowerCase()}`\n    }\n\n    let wordsArray = text.split(\" \")\n\n    return wordsArray.map(word => {\n      if (word.length < 3) {\n        return word.toLocaleLowerCase()\n      }\n      return `${word.substr(0, 1).toLocaleUpperCase()}${word.substr(1).toLocaleLowerCase()}`\n    }).join(' ');\n  }\n\n  static JustifyLeft(value, size, characterToFit = \"\") {\n\n    if (typeof value != \"string\") value = value.toString();\n\n    return value.padStart(size, characterToFit);\n  }\n\n  static formatParamsToQueryString(params) {\n    var queryString;\n    queryString = new URLSearchParams(params).toString();\n\n    if (queryString != \"\") queryString = `?${queryString}`;\n\n    return queryString;\n  }\n\n  static backgroundModal() {\n    return {\n      backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 10,\n    }\n  }\n\n  static styleMessage() {\n    return {\n      backgroundColor: \"#424242\",\n      position: \"absolute\",\n      zIndex:10,\n      right: \"-30%\",\n      width:\"25%\",\n      padding:5,\n      color: \"white\",\n      textAlign:'center',\n      bottom: 0,\n      zIndex: 10,\n      fontSize: \"1vw\",\n      height:50,\n      borderRadius:5\n    }\n  }\n}\n","import axios from 'axios';\r\nimport { BaseProvider } from \"./Base\";\r\nimport { StringHelper } from '../helpers/String';\r\n\r\nexport class CrudProvider extends BaseProvider {\r\n\r\n  constructor(moduleAPI) {\r\n    super(moduleAPI)\r\n  }\r\n\r\n  async get(id) {\r\n    return this.handleRequest(axios.get(`${this.baseUrl}/${id}`, {\r\n      headers: this.getHeaders()\r\n    }))\r\n  }\r\n\r\n  async getList(data) {\r\n    console.log(\"getList -> data\", data)\r\n\r\n    let queryString = StringHelper.formatParamsToQueryString(data);\r\n    \r\n    return this.handleRequest(axios.get(`${this.baseUrl}${queryString}`, {\r\n      headers: this.getHeaders()\r\n    }))\r\n  }\r\n\r\n  async create(obj) {\r\n    return this.handleRequest(axios.post(`${this.baseUrl}`, obj, {\r\n      headers: this.getHeaders()\r\n    }))\r\n  }\r\n\r\n  async update(id, obj) {\r\n    return this.handleRequest(axios.patch(`${this.baseUrl}/${id}`, obj, {\r\n      headers: this.getHeaders()\r\n    }))\r\n  }\r\n\r\n  async delete(id) {\r\n    return this.handleRequest(axios.delete(`${this.baseUrl}/${id}`, {\r\n      headers: this.getHeaders()\r\n    }))\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactConfirmAlert, { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nexport class MessageModal {\n\n  /**\n   * \n   * Solicita confirmação ao usuário\n   * \n   *  @Param title : string\n   *  @Param mesage : string\n   *  @Param confirmationCallBack : function\n   */\n  static confirmation(title = \"Confirma?\", message = \"Confirma a ação?\", confirmationCallBack) {\n\n    confirmAlert({\n      title: title,\n      message: message,\n      buttons: [\n        {\n          label: 'Não'\n        },\n        {\n          label: 'Sim',\n          onClick: confirmationCallBack\n        }\n      ],\n    })\n  };\n  \n  /**\n   * \n   * Abre texto informativo ao usuário\n   * \n   *  @Param title : string\n   *  @Param mesage : string\n   *  @Param confirmationCallBack : function\n   */\n  static information(title = \"Informativo\", message = \"\", callBack) {\n    \n    confirmAlert({\n      title: title,\n      message: message,\n      buttons: [\n        {\n          label: 'OK',\n          onClick: callBack\n        }\n      ],\n      closeOnClickOutside: false,\n      closeOnEscape: false\n    });\n  };\n  \n  /**\n   * \n   * Abre texto informativo com lista ao usuário\n   * \n   *  @Param title : string\n   *  @Param message : string\n   *  @Param arrayMessage : Array<string>\n   *  @Param confirmationCallBack : function\n   */\n  static informationList(title = \"Informativo\", message, arrayMessage = [], callBack) {\n    \n    confirmAlert({\n      title: title,\n      message: message,\n      childrenElement: () => (\n        <div>\n          <br></br>\n          <ul>\n            {arrayMessage.map(message => <li>{message.message || message.error || message}</li>)}\n          </ul>\n          <br></br>\n        </div>\n      ),\n      buttons: [\n        {\n          label: 'OK',\n          onClick: callBack\n        }\n      ],\n      closeOnClickOutside: false,\n      closeOnEscape: false\n    });\n  };\n}","import { CrudProvider } from './Crud'\nimport { StringHelper } from '../helpers/String'\nimport { MessageModal } from '../components/Message'\n\nexport class HandlerProvider {\n\n  constructor(provider, entityName) {\n    \n    if (!(provider instanceof CrudProvider)) {\n      throw new Error(\"Provider inválido! deveria ser uma instancia do CrudProvider\")\n    }\n\n    this.provider = provider\n    this.entityName = entityName\n  }\n\n  save(object, successCallBack) {\n    let id = Number(object.id)\n    let alreadyRegistered = (typeof id == \"number\" && id > 0)\n    if (!alreadyRegistered) {\n      delete object.id\n    }\n\n    let action = alreadyRegistered? \"atualizar\" : \"cadastrar\"\n    let title = StringHelper.FirstLetterUpperCase(`${action} ${this.entityName}?`)\n\n    //MessageModal.confirmation(title, \"Confirma a ação?\",this.execute(callback, action, successCallBack))\n\n    if (alreadyRegistered) {\n      //MessageModal.confirmation(title, \"Confirma a ação?\", async () => {this.execute(this.provider.update(id,object), action, successCallBack)})\n      this.execute(this.provider.update(id,object), action, successCallBack)\n    } else {\n      this.execute(this.provider.create(object), action, successCallBack)\n      //MessageModal.confirmation(title, \"Confirma a ação?\", async () => {this.execute(this.provider.create(object), action, successCallBack)})\n    }\n  }\n\n  async get(id){\n    try {\n      let response = await this.provider.get(id);\n      return response;\n    } catch (error) {\n      return error.message;\n    }\n\n  }\n\n  delete(id, successCallBack) {\n    \n    try {\n      id=Number(id)\n    } catch (error) {\n      return\n    }\n\n    if (typeof id !== \"number\" || id < 1) {\n      return\n    }\n\n    let title = `Deletar ${StringHelper.FirstLetterUpperCase(this.entityName)}?`\n    MessageModal.confirmation(title, \"Confirma a ação?\", async() => {this.execute(this.provider.delete(id), \"deletar\", successCallBack)})\n  }\n\n  async getList(data){\n\n    try {\n      let response = await this.provider.getList(data);\n      return response;\n    } catch (error) {\n      return [];\n    }\n  }\n\n  async execute(functionToExecute, action, successCallBack) {\n\n    if (action === \"cadastrar\") {\n      action = \"cadastrado\"\n    } else if(action === \"atualizar\") {\n      action = \"atualizado\"\n    } else if(action === \"deletar\") {\n      action = \"deletado\"\n    } else {\n      action = \"\"\n    }\n\n    let response = null\n\n    try {\n      response = await functionToExecute\n    } catch (error) {\n      console.log(\"TCL: HandlerProvider -> execute -> error\", error)\n    }\n\n    let title = '⚠ Erro'\n    \n    if (response === undefined) {\n      \n      MessageModal.information(title, \"Ocorreu um erro! se persistir fazer entrar em contato com o departamento de TI.\",() => console.log('error'))\n      \n    } else if (!response.success) {\n\n      let arrayOfMessage = []\n\n      if (response.error instanceof Array) {\n        response.error.forEach(error => {\n          arrayOfMessage.push(error)\n        });\n      } else {\n        arrayOfMessage.push(response.error)\n      }\n\n      MessageModal.informationList(title, \"Ocorreram erros ao executar a ação:\", arrayOfMessage,() => console.log('error'))\n      \n    } else {\n      title = '✔ Sucesso'\n      MessageModal.information(title, StringHelper.FirstLetterUpperCase(`${this.entityName} ${action} com sucesso!`), successCallBack)\n    }\n  }\n}","import { CrudProvider } from \"./Crud\";\n\nexport class MaintenanceOrderProvider extends CrudProvider {\n\n  constructor() {\n    super('maintenance-orders')\n  }\n}","import React, { PureComponent } from 'react';\nimport Button from 'react-md/lib/Buttons/Button';\nimport { MenuButton, FontIcon, ListItem } from 'react-md';\nimport '../index.css';\n// import './Button.css';\n\nexport class C_Button extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Button raised\n        primary={this.props.primary}\n        className={this.props.className}\n        secondary={this.props.secondary}\n        label={this.props.label}\n        style={this.props.style}\n        onClick={this.props.action}\n        disabled={this.props.disabled}\n        iconEl={this.props.icon}\n        name={this.props.name}\n      />\n    );\n  }\n}\n\nexport class C_ButtonFloat extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  render(){\n    return (\n      <Button floating\n        label={this.props.label}\n        tooltipLabel={this.props.tooltipLabel}\n        tooltipPosition={this.props.tooltipPosition}\n        primary={this.props.primary}\n        secondary={this.props.secondary}\n        className={this.props.className}\n        style={this.props.style}\n        onClick={this.props.action}\n        forceIconFontSize={this.props.iconSize ? true : undefined}\n        secondary={this.props.secondary}\n        forceIconSize={this.props.iconSize}\n        onMouseEnter={this.props.onMouseEnter}\n        onMouseLeave={this.props.onMouseLeave}\n      >\n        {this.props.icon}\n      </Button>\n    );\n  }\n}\n\n\nexport class C_MenuButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: this.props.options\n    }\n\n  }\n\n\n  render() {\n    var options = this.state.options;\n\n    var listItem = [];\n\n    options.map((item, i) => {\n      var obj = {\n        primaryText: <ListItem disabled={item.disabled} key={item.value} onClick={() => this.props.onClickItem(item.value)} primaryText={item.name} />,\n        leftIcon: <FontIcon>{item.icon}</FontIcon>,\n      } \n\n      listItem.push(obj);\n    })\n\n    return (\n      <MenuButton\n        id={this.props.name}\n        icon\n        cascading={this.props.cascading}\n        style={this.props.style}\n        listStyle={this.props.listStyle}\n        menuStyle={this.props.menuStyle}\n        anchor={{\n          x: MenuButton.HorizontalAnchors.INNER_LEFT,\n          y: MenuButton.VerticalAnchors.TOP,\n        }}\n        position={this.props.position ? this.props.position : MenuButton.Positions.TOP_RIGHT}\n        secondary\n        menuItems={listItem}\n      >\n        {this.props.icon}\n      </MenuButton>\n    );\n  }\n}\n","export class ObjectHelper {\n\n  static clearFields(obj, exclude = false) {\n    for (const key in obj) {\n      if (!obj.hasOwnProperty(key)) continue;\n      if (exclude) {\n        delete obj[key];\n      } else {\n        obj[key] = \"\";\n      }\n    }\n  }\n\n  static getPropertys (obj, path, defaultValue = undefined){\n    const travel = regexp =>\n      String.prototype.split\n        .call(path, regexp)\n        .filter(Boolean)\n        .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj);\n    const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n    \n    return result === undefined || result === obj ? defaultValue : result;\n  }\n\n  static sortArray(property, list) {\n    return list.sort((a, b) => {\n      if (a[property] < b[property])\n        return -1;\n      if (a[property] > b[property])\n        return 1;\n      return 0;\n    });\n  }\n}","import React, { PureComponent } from 'react';\nimport { FontIcon } from 'react-md';\nimport '../index.css';\n// import './Button.css';\n\nexport class C_Icon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <FontIcon \n        className={this.props.className}\n        primary={this.props.primary}\n        forceIconFontSize={this.props.iconSize ? true : undefined}\n        secondary={this.props.secondary}\n        forceIconSize={this.props.iconSize}\n        label={this.props.label}\n        style={this.props.style}\n        onClick={this.props.action}\n        disabled={this.props.disabled}\n        iconEl={this.props.icon}\n        name={this.props.name}\n      >{this.props.icon}</FontIcon>\n    );\n  }\n}","import React, { Component } from 'react';\nimport TextField from 'react-md/lib/TextFields';\nimport '../index.css';\nimport { FontIcon } from 'react-md';\n\nclass C_TextField extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n  }\n\n  onChange(pValue) {\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <TextField \n          id={this.props.name}\n          errorText={this.props.showError}\n          label={this.props.label}\n          placeholder={this.props.placeholder}\n          leftIcon={this.props.icon ? <FontIcon style={{ fontSize: 25, cursor: \"pointer\" }}>{this.props.icon}</FontIcon> : undefined}\n          inputStyle={this.props.style}\n          type={this.props.type}\n          rightIcon={this.props.rightIcon ? <FontIcon style={{ fontSize: 30, cursor: \"pointer\" }}>{this.props.rightIcon}</FontIcon> : undefined}\n          className={this.props.className}\n          rows={this.props.rows}\n          onChange={this.onChange}\n          required={this.props.required}\n          disabled={this.props.disabled}\n          style={this.props.css}\n          value={this.props.value}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default C_TextField;","import React, { PureComponent } from 'react';\nimport {DataTable,TableHeader,TableBody,TableRow,TableColumn,TablePagination} from 'react-md';\nimport '../index.css';\nimport { ObjectHelper } from \"../helpers/Object\"\nimport {C_Icon} from \"./Icon\";\n\nimport C_TextField from './TextField';\n\nexport class C_Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fontSize: this.props.fontSize,\n      titleSize: this.props.titleSize,\n      content: this.props.content,\n      columns: this.props.columns,\n      hasFilter: this.props.hasFilter,\n      showPagination: this.props.showPagination,\n      showEffect: this.props.showEffect,\n      filter: '',\n      paginatedData: [],\n      textAlign: this.props.textAlign,\n      pagination: 0,\n      rowsPerPage: this.props.rowsPerPage,\n      currentRowsPerPage: this.props.rowsPerPage || this.props.content.length,\n    }\n\n    \n    this.handlePagination = this.handlePagination.bind(this);\n  }\n\n  componentDidUpdate() {\n    let { content, rowsPerPage, paginatedData, currentRowsPerPage } = this.state;\n   \n    if (paginatedData.length || content.length == 0) return;\n    \n    if (this.state.showPagination) {\n      if (!rowsPerPage) return;\n      \n      currentRowsPerPage = rowsPerPage\n      paginatedData = this.filterData().slice(0, currentRowsPerPage);\n\n    } else paginatedData = this.filterData();\n    \n    this.setState({ paginatedData, currentRowsPerPage });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState(nextProps);\n  }\n\n  filterData() {\n    const { content, filter } = this.state;\n\n    if(!filter || filter == '') return content;\n\n    const filtered = content.filter(field => this.filterField(field, filter))\n\n    return filtered;\n  }\n\n  filterField(field, filter) {\n\n    if(typeof field === \"object\") {\n\n      let isValid = false;\n      const entries = Object.entries(field)\n\n      for (let [key, value] of entries) {\n        isValid = this.filterField(value, filter)\n        if (isValid) break;\n      }\n\n      return isValid;\n      \n    } else return this.filterValue(field.toString(), filter.toString());\n    \n  }\n\n  filterValue(contentRaw, filterRaw) {\n    const content = contentRaw.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n    const filter = filterRaw.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n\n    if (content == \"\") return false;\n    if (filter == \"\") return false;\n    \n    return (\n      content.includes(filter) ||\n      filter.includes(content)\n    );\n  }\n\n  getPaginatedData() {\n    const { pagination, currentRowsPerPage } = this.state;\n    return this.filterData().slice(pagination, pagination + currentRowsPerPage)\n  }\n\n  getValueProperty(object = {}, {property = \"\", defaultValue = \"\", format} = {}){\n    let value = ObjectHelper.getPropertys(object, property, defaultValue)\n\n    if(value == defaultValue) return value;\n\n    if(typeof format == \"function\") value = format(value);\n\n    return value\n  }\n\n  handlePagination = (start, rowsPerPage) => {\n    this.setState({ pagination: start, currentRowsPerPage: rowsPerPage })\n  };\n\n  render() {\n    \n    var columns = this.state.columns;\n    var content = this.getPaginatedData();\n\n    var defaultStyleRows = {\n      textAlign: this.state.textAlign ? this.state.textAlign : \"left\",\n      fontSize: this.state.fontSize ? this.state.fontSize : 16,\n    }\n\n    return (\n      <div style={{ border: \"1px solid silver\", borderRadius: 5 }}>\n        <DataTable style={{}} baseId=\"simple-pagination\">\n          <TableHeader>\n            <TableRow selectable={false}>\n              {columns && columns.map((colum) => (\n                <TableColumn\n                  style={{ \n                    color: \"black\", \n                    textAlign: this.state.textAlign ? this.state.textAlign : \"left\", \n                    fontSize: this.state.titleSize ? this.state.titleSize : 20\n                  }}\n                  key={colum.name || \"\"}\n                >\n                  {colum.name ? colum.name : \"\"}\n                </TableColumn>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {content && content.map((content, i) => (\n              <TableRow key={i} style={{ cursor: \"pointer\" }} onClick={() => this.props.onClick(content)} className={this.state.showEffect ? \"effectfrontSmall\" : \"\"} key={content.id} selectable={false}>\n                {columns && columns.map((colum) => (\n                  <TableColumn header={true} style={defaultStyleRows}>\n                    {colum.icon ? \n                      <C_Icon icon={colum.icon} action={() => colum.action(i)}/>\n                      : this.getValueProperty(content, colum)\n                    }\n                  </TableColumn>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n          {this.state.showPagination\n            ? <div style={{ position: \"relative\", className: \"md-grid\" }}>\n                { this.state.hasFilter ?\n                  <div style={{ position: \"absolute\", bottom: 0, left: 10, width: 500 }}>\n                    <C_TextField\n                      id=\"filter\"\n                      name=\"filter\"\n                      value={this.state.filter}\n                      onChange={(e) => this.setState({ filter: e.target.value })}\n                      type=\"text\"\n                      placeholder=\"Filtrar tabela\"\n                    />\n                  </div>\n                : undefined\n                }\n                <TablePagination\n                  rows={this.state.content.length}\n                  rowsPerPage={this.state.rowsPerPage}\n                  rowsPerPageLabel={'Linhas'}\n                  onPagination={this.handlePagination}\n                />\n              </div>\n            : undefined\n          }\n        </DataTable>\n        \n        { this.state.hasFilter && !this.state.showPagination ?\n          <div style={{width: \"95%\", margin: \"0 auto\"}}>\n            <C_TextField\n              id=\"filter\"\n              name=\"filter\"\n              value={this.state.filter}\n              onChange={(e) => this.setState({ filter: e.target.value })}\n              type=\"text\"\n              placeholder=\"Filtrar tabela\"\n            />\n          </div>\n        : undefined\n        }\n      </div>\n    );\n  }\n}","import { StringHelper } from \"./String\";\n\nexport class DateHelper {\n\n  static formatDate(inputDate) {\n    var date = this.getDate(inputDate);    \n\n    var day = StringHelper.JustifyLeft(date.getDate(), 2, 0);\n    var month = StringHelper.JustifyLeft(date.getMonth() + 1, 2, 0);\n    var year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  }\n\n  static formatDateTime(inputDate) {\n    var date = this.getDate(inputDate);\n\n    var day = StringHelper.JustifyLeft(date.getDate(), 2, 0);\n    var month = StringHelper.JustifyLeft(date.getMonth() + 1, 2, 0);\n    var year = date.getFullYear();\n    var hour = date.getHours();\n    var minutes = date.getMinutes();\n\n    return `${day}/${month}/${year} às ${hour}h${minutes}`;\n  }\n\n  static getDate(date){\n    if (typeof date == \"object\") return date;\n    \n    return new Date(date);\n  }\n}","import { DateHelper } from './Date';\nexport class MaintenanceOrderHelper {\n\n  static translate(prop, value) {\n    var props;\n\n    if (prop == \"priority\") props = this.getPriority();\n    else if (prop == \"status\") props = this.getStatus();\n    else if (prop == \"color\") props = this.getColorPriority();\n    else if (prop == \"layout\") props = this.getLayoutType();\n    else return value;\n\n    return props[value];\n\n  }\n\n  static getLayoutType() {\n    return {\n      default: 'Corretiva | Preventiva',\n      route: 'ROTA',\n      list: 'LISTA',\n    }\n  }\n\n  static getColorPriority() {\n    return {\n      low: \"#03a140\",\n      medium: \"#3177e8\",\n      high: \"#ffd300\",\n      urgent: \"red\"\n    }\n  }\n\n  static getPriority() {\n    return {\n      low: \"Baixa\",\n      medium: \"Média\",\n      high: \"Alta\",\n      urgent: \"Urgente\"\n    }\n  }\n\n  static getStatus() {\n    return {\n      created: \"Aberta\",\n      assumed: \"Assumida\",\n      started: \"Iniciada\",\n      paused: \"Pausada\",\n      stopped: \"Parada\",\n      canceled: \"Cancelada\",\n      \"signature-pending\": \"Assinatura Pendente\",\n      signatured: \"Assinada\",\n      finished: \"Finalizada\",\n      \"no_status\": \"Sem Status\",\n    }\n  }\n\n  static sortOrders(list) {\n    var ordenatedPriority = this.ordenatedPriority();\n\n    return list.sort((a, b) => {\n      if (ordenatedPriority[a.priority] > ordenatedPriority[b.priority]) return -1;\n      else if (ordenatedPriority[a.priority] < ordenatedPriority[b.priority]) return 1;\n\n      var dateTimeA = DateHelper.getDate(a.openedDate).getTime();\n      var dateTimeB = DateHelper.getDate(b.openedDate).getTime();\n\n      if (dateTimeA > dateTimeB) return 1;\n      else if (dateTimeA == dateTimeB) return 0;\n      else return -1;\n\n    })\n  }\n\n  static ordenatedPriority() {\n    return {\n      urgent: 3,\n      high: 2,\n      medium: 1,\n      low: 0,\n    }\n  }\n}","import React, { PureComponent } from 'react';\n// import Button from 'react-md/lib/Buttons/Button';\nimport { CircularProgress } from 'react-md';\nimport '../index.css';\n\nexport class C_Loading extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <CircularProgress\n          scale={this.props.scale ? this.props.scale : 2}\n        />\n        {this.props.footer ?\n          <span style={{ textAlign: \"center\", fontSize: 17, fontWeight: \"bold\" }}>{this.props.message ? this.props.message : \"Carregando...\"}</span>\n        : undefined}\n        \n      </div>\n      \n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport Checkbox from 'react-md/lib/SelectionControls/Checkbox';\nimport Switch from 'react-md/lib/SelectionControls/Switch';\nimport '../index.css';\n\nexport class C_CheckBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n  }\n\n  onChange(pValue) {\n    console.log(\"pValue\", pValue);\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Checkbox\n          label={this.props.label}\n          onChange={this.onChange}\n          onClick={this.props.action}\n          style={this.props.style}\n          id={this.props.name}\n          className={this.props.className}\n          disabled={this.props.disabled}\n          checked={this.props.checked}\n          type={this.props.type}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport class C_Switch extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n  }\n\n  onChange(pValue) {\n    console.log(\"pValue\", pValue);\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n  render() {\n\n    return (\n      <Switch\n        id={this.props.name}\n        type={this.props.type}\n        label={<div style={{ color: '#0000008a' }}>{this.props.label}</div>}\n        name={this.props.name}\n        value={this.props.value}\n        className={this.props.className}\n        checked={this.props.checked}\n        onChange={this.onChange}\n        style={this.props.style}\n      />\n\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Tooltip } from 'react-tippy';\nimport 'react-tippy/dist/tippy.css';\nimport '../index.css';\n\nexport class C_ToolTip extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n  }\n\n  render() {\n    return (\n      <Tooltip\n        html={(\n          <div style={this.props.tooltipStyle}>\n            {this.props.tooltip}\n          </div>\n        )}\n        size=\"big\"\n        unmountHTMLWhenHide={true}\n        className={this.props.className}\n        position={this.props.position}\n        trigger={this.props.trigger ? this.props.trigger : \"mouseenter\"}\n        arrow={true}\n        onShow={this.props.onShow}\n        style={this.props.style}\n        tooltipStyle={this.props.tooltipStyle}\n        delay={this.props.delay ? this.props.delay : 250}\n        theme={this.props.theme}\n        interactive={this.props.interactive}\n        distance={this.props.distance}\n        duration={this.props.duration}\n      >\n        {this.props.children}\n      </Tooltip>\n    );\n  }\n}","import { Card, CardTitle, CardText, Avatar } from 'react-md';\nimport React, { PureComponent } from 'react';\nimport '../index.css';\nimport C_SelectField from './SelectField';\nimport C_TextField from './TextField';\nimport { C_TimePicker } from \"./Calendar\"\nimport { C_Icon } from './Icon';\nimport { C_Switch } from './CheckBox'\nimport { C_Button, C_ButtonFloat } from './Button'\nimport { C_ToolTip } from './ToolTip'\n\nexport class C_Operations extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewOperations: true,\n      orderId: this.props.orderId,\n      operations: [],\n    }\n\n    this.createOperation = this.createOperation.bind(this);\n    // this.updateOperatio\n  }\n\n  componentDidMount() {\n\n  }\n\n  createOperation(operation) {\n    var operations = this.state.operations;\n\n    operations.push(operation);\n\n    this.setState({ operations, operation })\n  }\n\n  render() {\n\n    console.log(\"state\", this.state)\n\n\n    return (\n\n      <Card\n        style={this.props.style}\n        className={this.props.className}\n        title={this.props.title}\n      >\n        <div style={{ position: \"relative\" }}>\n          <div>\n            <C_Icon\n              style={{ cursor: \"pointer\", position: \"absolute\", right: 0 }}\n              icon=\"close\" iconSize={25}\n              action={() => this.props.onClose()}\n            />\n          </div>\n          <div style={{ width: \"80%\", justifyContent: \"space-between\", display: \"flex\", alignItems: \"center\" }}>\n            <span style={{ fontSize: 24, fontWeight: \"bold\" }}>{this.props.title}</span>\n            <C_ToolTip\n              position=\"left\"\n              tooltipStyle={{ fontSize: 15 }}\n              tooltip={this.state.viewOperations ? \"Cadastrar Operação\" : \"Visualizar Operações\"}\n            >\n              <C_ButtonFloat\n                iconSize={30} primary\n                style={{ display: \"flex\", width: \"auto\", height: \"auto\" }}\n                icon={this.state.viewOperations ? \"add\" : \"visibility\"} action={() => this.setState({ viewOperations: !this.state.viewOperations ? true : false, isEditing: false })}\n              />\n            </C_ToolTip>\n          </div>\n\n          <div style={{ fontSize: 20, color: \"#424242\" }}>\n            {this.state.viewOperations ? \"Operações realizadas na Ordem.\" : (this.state.isEditing ? \"Editar Operação\" : \"Cadastrar Nova Operação\")}\n          </div>\n          {this.state.viewOperations ?\n            <ViewOperations\n              orderId={this.state.orderId}\n              operations={this.state.operations}\n              isEditing={(item) => this.setState({ isEditing: true, viewOperations: false, operation : item})}\n            />\n            :\n            <CrudOperation\n              showOperations={() => this.setState({viewOperations:true})}\n              equipments={this.props.equipments}\n              edit={this.state.isEditing}\n              operation={this.state.operation}\n              save={(operation) => this.state.isEditing ? this.createOperation(operation) : this.createOperation(operation)}\n            />\n          }\n        </div>\n      </Card>\n    );\n  }\n}\n\n\nexport class ViewOperations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      operations: this.props.operations ? this.props.operations : undefined,\n      orderId: this.props.orderId\n    }\n    console.log(\"ViewOperations -> constructor -> this.props\", this.props)\n  }\n\n  componentDidMount() {\n\n\n  }\n\n\n  render() {\n\n    let operations = this.state.operations;\n\n    return (\n      <div>\n\n        {!operations || operations.length == 0 ?\n          <div style={{ textAlign: \"center\", marginTop: 50 }}>\n            <h1>Nenhuma Operação Realizada.</h1>\n          </div>\n          : undefined}\n\n        <div style={{ marginTop: 20 }}>\n          {operations && operations.map((operation, i) =>\n            <div>\n              <div className=\"md-grid\">\n                <div className=\"effectfront\" style={{ marginRight: 20, cursor: \"pointer\", padding: 5, backgroundColor: \"#A40003\", color: \"white\", width: 30, height: 30, borderRadius: 22 }}>\n                  <div style={{ fontSize: 16, textAlign: \"center\" }}>{i + 1}</div>\n                </div>\n                <div className=\"md-cell md-cell--10 md-cell--bottom\">\n                  <C_TextField id=\"description\" name=\"description\"\n                    value={operation.description} onChange={this.onChange}\n                    type=\"text\" label=\"Descrição\" required={false}\n                    icon=\"description\" disabled={true}\n                  />\n                </div>\n                <div style={{ display: \"flex\", position:\"absolute\", right:0, margin:20, alignItems: \"center\" }}>\n                  <div>\n                    <C_Icon style={{ cursor: \"pointer\", fontSize: 25, paddingRight: 20 }} icon=\"edit\"\n                      action={() => this.props.isEditing(operation)}\n                    />\n                  </div>\n                  <div>\n                    <C_Icon style={{ cursor: \"pointer\", fontSize: 25, }} icon=\"delete\" \n                      action={() => {\n                          this.props.delete(operation)\n                        }\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class CrudOperation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedEquipment: this.props.equipments[0].equipment.id,\n      equipments: this.props.equipments,\n      operation: this.props.edit ? this.props.operation : {},\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.sendOperation = this.sendOperation.bind(this);\n\n    console.log(\"CrudOperation -> constructor -> this.props\", this.props)\n  }\n\n  sendOperation() {\n    let operation = this.state.operation;\n    let listEquipments = this.state.listEquipments\n    console.log(\"CreateOperation -> sendOperation -> listEquipments\", listEquipments)\n    let descriptionEquipment = \"\";\n\n    for (let i = 0; i < listEquipments.length; i++) {\n      if (listEquipments[i].value == this.state.selectedEquipment)\n        descriptionEquipment = listEquipments[i].label\n    }\n\n    operation.orderEquipment = {\n      id: this.state.selectedEquipment,\n      description: descriptionEquipment\n    }\n\n    this.props.save(operation);\n\n    this.setState({operation:{}})\n\n  }\n\n  componentDidMount() {\n\n    let listEquipments = [];\n    let equipments = this.state.equipments;\n\n    for (let i = 0; i < equipments.length; i++) {\n      var equipment = {\n        label: equipments[i].equipment.description,\n        value: equipments[i].equipment.id\n      }\n      listEquipments.push(equipment)\n    }\n    console.log(\"C_Operations -> componentDidMount -> listEquipments\", listEquipments)\n\n    this.setState({ listEquipments })\n  }\n\n  onChange(e, name) {\n\n    let operation = this.state.operation;\n\n    operation[e.target.name] = e.target.value;\n    this.setState({ operation })\n\n  }\n\n  render() {\n\n    console.log(\"list de operações\", this.state.listOperations);\n\n\n    return (\n      <div>\n        <div className=\"md-cell md-cell--12 md-cell--bottom\">\n          <C_SelectField name=\"orderEquipament\" id=\"orderEquipament\"\n            value={this.state.selectedEquipment} onChange={(e) => this.setState({ selectedEquipment: e.target.value })} type=\"text\"\n            label={\"Selecione o Equipamento\"} placeholder={\"Selecionar\"}\n            list={this.state.listEquipments} required={true}\n            style={{ width: \"100%\" }} disabled={this.props.edit}\n          />\n        </div>\n        <div className=\"md-cell md-cell--12 md-cell--bottom\">\n          <C_TextField id=\"description\" name=\"description\"\n            value={this.state.operation.description} onChange={this.onChange}\n            type=\"text\" label=\"Descrição\" placeholder=\"Descrição\"\n            icon=\"description\" required={true}\n          />\n        </div>\n        <div className=\"md-cell md-cell--12 md-cell--bottom\">\n          <C_TextField id=\"planningTime\" name=\"planningTime\"\n            value={this.state.operation.planningTime} onChange={this.onChange}\n            type=\"number\" label=\"Tempo Planejado\" placeholder=\"Informe o tempo em minutos\" required={false}\n            icon=\"access_time\" disabled={this.props.edit}\n          />\n        </div>\n        <div className=\"md-cell md-cell--12 md-cell--bottom\">\n          <C_TextField id=\"executeTime\" name=\"executeTime\"\n            value={this.state.operation.executeTime} onChange={this.onChange}\n            type=\"number\" label=\"Tempo Executado\" placeholder=\"Informe o tempo em minutos\" required={false}\n            icon=\"add_alarm\"\n          />\n        </div>\n        <div className=\"md-cell md-cell--12 md-cell--bottom\">\n          <C_TextField id=\"note\" name=\"note\"\n            value={this.state.operation.note} onChange={this.onChange}\n            type=\"text\" label=\"Observações\" placeholder=\"Observações\" required={false}\n            icon=\"comment\" rows={2}\n          />\n        </div>\n        <div style={{ margin: 0, paddingTop: 20 }} className=\"md-grid\">\n          <C_Switch id=\"executed\" name=\"executed\" className=\"md-cell md-cell--6\"\n            value={this.state.operation.executed} onChange={this.onChange}\n            type=\"switch\" label=\"Marcar como Executado\" checked={this.state.operation.executed}\n          />\n          <C_Button\n            secondary={true}\n            label=\"CANCELAR\"\n            className=\"md-cell md-cell--3 md-cell--bottom\"\n            action={() => { this.props.showOperations() }}\n          />\n          <C_Button\n            className=\"md-cell md-cell--3 md-cell--bottom\"\n            primary={true}\n            label=\"SALVAR\"\n            action={() => this.sendOperation()}\n          />\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport '../index.css';\nimport { C_Icon } from './Icon';\n\nclass C_Header extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ backgroundColor: this.props.backgroundColor ? this.props.backgroundColor : \"#db3d44\", \n          marginTop: this.props.noMargin ? undefined : 10, \n          padding: 10, width: \"100%\", borderRadius: 5, border: \"1px solid silver\" }}\n        >\n          <div style={{\n            display: \"flex\", justifyContent: \"space-between\", color: \"white\", fontWeight: \"bold\",\n            fontSize: 20, fontFamily: 'Arial', alignItems: \"center\"\n          }}\n          >\n            {this.props.title}\n            <C_Icon action={() => this.props.onClick()} style={{ cursor: \"pointer\", fontSize: 25, color: \"white\", }} icon={this.props.icon}\n            />\n          </div>\n        </div>\n          {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default C_Header;","import React, { PureComponent } from 'react';\nimport { CardTitle, CardText } from 'react-md';\nimport '../index.css';\nimport { C_Icon } from './Icon';\nimport { C_ToolTip } from './ToolTip';\n// import './Button.css';\n\nexport class C_Label extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      style: this.props.style\n    }\n  }\n\n  render() {\n\n    console.log(\"C_Label -> render -> this.props\", this.props)\n\n    let style = this.state.style;\n\n    if (!style) style = {maxWidth: this.props.maxWidth ? this.props.maxWidth : undefined, textAlign:\"justify\", display:\"flex\", marginLeft: 20, fontFamily: 'sans-serif'};\n\n    return (\n      <div className={this.props.className}>\n        <CardTitle subtitle={this.props.label}/>\n        {this.props.icon ?\n          <C_ToolTip position=\"right\" tooltip={this.props.tooltip}>\n            <C_Icon style={this.props.iconStyle} icon={this.props.icon}/>\n          </C_ToolTip>\n        : <span style={style}>{this.props.value}</span>\n        }\n      </div>  \n    );\n  }\n}","import React, { PureComponent } from 'react';\nimport '../index.css';\nimport { C_ButtonFloat, C_MenuButton } from \"./Button\";\nimport { C_Icon } from \"./Icon\";\nimport { MaintenanceOrderHelper as HelperOM } from '../helpers/MaintenanceOrder';\nimport { StringHelper } from '../helpers/String';\nimport {DateHelper} from '../helpers/Date';\nimport { HandlerProvider } from '../providers/handler';\nimport { MaintenanceOrderProvider } from '../providers/MaintenanceOrder';\nimport { C_Loading } from './Loading';\nimport { C_Operations } from './Operations';\nimport { C_ToolTip } from './ToolTip';\nimport C_Header from './Header';\nimport { C_Label } from './Label';\nexport class C_MaintenanceOrder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      orderId: this.props.orderId,\n      order: undefined,\n      expandedDetails: true,\n      expandedEquipments: true,\n      expandEquipment: {},\n      backgroundModal: StringHelper.backgroundModal(),\n      backgroundDefault: {\n        width: \"100%\", \n        padding: 20\n      }\n    }\n\n    this.provider = new HandlerProvider(new MaintenanceOrderProvider(), \"ordem de manutenção\")\n    this.getOrder();\n  }\n\n  async getOrder() {\n\n    let order = {};\n    let response = await this.provider.get(this.state.orderId);\n    console.log(\"C_MaintenanceOrder -> getOrder -> response\", response)\n\n    if (response.success) {\n      order = response.data\n    }\n\n    this.setState({ order })\n  }\n\n  render() {\n\n    var order = this.state.order;\n    console.log(\"C_MaintenanceOrder -> render -> order\", order)\n\n    const configOptions = [\n      { value: \"assume\", name: \"ASSUMIR ORDEM\", icon: \"touch_app\", disabled: false },\n      { value: \"play\", name: \"INICIAR ORDEM\", icon: \"play_circle_filled\", disabled: true },\n      { value: \"pause\", name: \"PAUSAR ORDEM\", icon: \"pause_circle_filled\", disabled: true },\n      { value: \"delegate\", name: \"DELEGAR ORDEM\", icon: \"person_add\", disabled: false },\n      { value: \"invite\", name: \"CONVIDAR TÉCNICO\", icon: \"group\", disabled: true },\n      { value: \"request\", name: \"SOLICITAR PARTICIPAÇÃO\", icon: \"group_add\", disabled: true },\n      { value: \"appointments\", name: \"APONTAMENTOS\", icon: \"assignment\", disabled: true },\n      { value: \"status_equipment\", name: \"STATUS EQUIPAMENTO\", icon: \"swap_vert\", disabled: true },\n      { value: \"check_list\", name: \"CHECK-LIST ORDEM\", icon: \"done_all\", disabled: true },\n      { value: \"operations\", name: \"OPERAÇÕES\", icon: \"build\", disabled: false },\n      { value: \"sign\", name: \"ASSINATURA\", icon: \"fingerprint\", disabled: true },\n    ]\n\n    return (\n\n      !this.state.order ?\n        <div style={{ marginTop: \"10%\", alignItems: \"center\", display: \"flex\", justifyContent: \"center\" }}>\n          <C_Loading\n            scale={3}\n            footer={true}\n            message={\"Carregando Ordem...\"}\n          />\n        </div>\n        :\n        <div style={this.state.backgroundDefault}>\n          <div style={{ position: \"relative\", display: \"flex\", justifyContent: \"space-between\", width: \"95%\", margin: \"auto\" }}>\n            <C_ToolTip tooltip=\"Voltar\" position=\"right\">\n              <C_ButtonFloat\n                icon={\"keyboard_backspace\"}\n                style={{ display: \"flex\", width: \"auto\", height: \"auto\" }}\n                iconSize={30}\n                secondary\n                action={() => this.props.onClose()}\n              />\n            </C_ToolTip>\n            <h1 style={{ fontSize: \"3em\", fontWeight: \"bold\" }}>{order.orderNumber}</h1>\n            <C_MenuButton\n              style={{ backgroundColor: '#424242', color: \"white\", display: \"flex\", width: \"auto\", height: \"auto\" }}\n              listStyle={{ position: \"fixed\", top: 20, right: 20 }}\n              icon=\"settings\"\n              options={configOptions}\n              onClickItem={(item) => this.setState({ itemSelected: item, showBackgroundColor: true })}\n            />\n          </div>\n          <div>\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n              <C_Icon style={{ fontSize: 60, color: HelperOM.translate(\"color\", order.priority) }} icon=\"bookmark\" />\n              <span style={{ fontSize: 18, fontWeight: \"bold\", color: \"#424242\" }}>{`Prioridade ${HelperOM.translate(\"priority\", order.priority)}`}</span>\n            </div>\n            <div style={{ marginTop: \"2%\", padding: 10, width: \"100%\", borderRadius: 5, border: \"1px solid silver\" }}>\n              <div style={{ fontStyle: 'oblique', display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\n                <span style={{ fontWeight: \"bold\", fontSize: 18 }}>{`ORDEM DE MANUTENÇÃO`}</span>\n                <span style={{ fontSize: 18 }}>{order.orderLayout.classification}</span>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <span style={{ fontWeight: \"bold\", fontSize: 18 }}>{`STATUS:`}</span>\n                  <span style={{ fontSize: 18, marginLeft: 5 }}>{HelperOM.translate(\"status\", order.orderStatus)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"slideInUp\">\n            <C_Header onClick={() => this.setState({ expandedDetails: !this.state.expandedDetails ? true : false })} icon={!this.state.expandedDetails ? \"expand_less\" : \"expand_more\"} title=\"Detalhes da Ordem\">\n              {this.state.expandedDetails ?\n                <div style={{ borderRadius: 5, border: \"1px solid silver\" }}>\n                  <div className=\"md-grid\">\n                    <C_Label maxWidth=\"80%\" className=\"md-cell md-cell--6 md-cell--bottom\" label=\"Descrição do Problema\" value={order.description}/>\n                    <C_Label className=\"md-cell md-cell--2 md-cell--bottom\" label=\"Solicitante\" value={order.solicitationUser.name} />\n                    <C_Label className=\"md-cell md-cell--3 md-cell--bottom\" label=\"Centro de Trabalho\" value={order.workCenter.description} />\n                    <C_Label className=\"md-cell md-cell--1 md-cell--bottom\" label=\"Tipo\" value={order.orderLayout.type} />\n                    <div style={{ margin: 10, position: \"absolute\", right: 0 }}>\n                      <C_ToolTip position=\"left\" \n                      tooltip={\n                        <div>                          \n                          <div>Aberto em:</div>\n                          <div>{DateHelper.formatDateTime(order.openedDate)}</div>\n                        </div>\n                      }>\n                        <C_Icon style={{cursor:\"pointer\", fontSize: 30, color:\"#3177e8\"}} icon=\"access_time\" />\n                      </C_ToolTip>\n                    </div>\n                  </div>\n                </div>\n                : undefined}\n            </C_Header>\n\n            <C_Header onClick={() => this.setState({ expandedEquipments: !this.state.expandedEquipments ? true : false })} icon={!this.state.expandedEquipments ? \"expand_less\" : \"expand_more\"} title=\"Equipamentos\">\n              {this.state.expandedEquipments ?\n                <div style={{ borderRadius: 5, padding: 10, border: \"1px solid silver\" }}>\n                  {order.orderEquipment && order.orderEquipment.length > 0 && order.orderEquipment.map((item, i) => (\n                    <C_Header backgroundColor=\"#847f7f\" icon={!this.state.expandEquipment[i] ? \"expand_less\" : \"expand_more\"} title={item.equipment.code} noMargin={true}\n                      onClick={() => {\n                        let expandEquipment = this.state.expandEquipment;\n                        expandEquipment[i] = !expandEquipment[i];\n                        this.setState({ expandEquipment })\n                      }} \n                    >\n                      {this.state.expandEquipment[i] ? \n                      <div key={i}>\n                        <div className=\"md-grid\" >\n                          <C_Label className=\"md-cell md-cell--5 md-cell--bottom\" label=\"Equipamento Superior\" value={item.superiorEquipment ? item.superiorEquipment.description : \"\"} />\n                          <C_Label className=\"md-cell md-cell--5 md-cell--bottom\" label=\"Equipamento\" value={item.equipment.description} />\n                          <C_Label className=\"md-cell md-cell--2 md-cell--bottom\" \n                            iconStyle={{ cursor: \"pointer\", fontSize: 30, marginLeft: 20, color: item.isStopped ? \"#ff7700\" : \"#03a140\"}}\n                            label=\"Status\" icon={item.isStopped ? \"error\" : \"check_circle\"} \n                            tooltip={item.isStopped ? \"Parado\" : \"Em Execução\"} \n                          />\n                        </div>\n                        <div className=\"md-grid\" >\n                          <C_Label className=\"md-cell md-cell--5 md-cell--bottom\" label=\"Local de Instalação\" value={item.installationArea.description} />\n                          <C_Label className=\"md-cell md-cell--5 md-cell--bottom\" label=\"Setor\" value={item.installationArea.sector.description} />   \n                          <C_Label className=\"md-cell md-cell--2 md-cell--bottom\" label=\"Tipo de Máquina\" value={item.equipment.machineType.description} />   \n                                                \n                        </div>\n                        <div className=\"md-grid\" >\n                          <C_Label className=\"md-cell md-cell--5 md-cell--bottom\" label=\"Causa do Defeito\" value={item.defectOrigin ? item.defectOrigin.description : \"\"} />\n                          <C_Label className=\"md-cell md-cell--5 md-cell--bottom\" label=\"Sintoma do Defeito\" value={item.defectSymptom ? item.defectSymptom.description: \"\"} />\n                          <C_Label className=\"md-cell md-cell--2 md-cell--bottom\" label=\"Requer Parada?\" value={item.needStopping ? \"SIM\" : \"NÃO\"} />  \n                        </div>\n                      </div>\n                      : undefined }\n                    </C_Header>\n                  ))}\n                </div>\n              : undefined}\n            </C_Header>\n          </div>\n\n          {this.state.itemSelected == \"operations\" ?\n            <div style={this.state.backgroundModal}>\n              <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", position: \"fixed\", top: \"5%\"}}>\n                <C_Operations\n                  style={{ width: \"50%\", padding: 20, borderRadius:5 }}\n                  orderId={order.id}\n                  equipments={order.orderEquipment}\n                  title=\"OPERAÇÕES\"\n                  onClose={() => this.setState({ itemSelected: \"\", showBackgroundColor: false })}\n                />\n              </div>\n            </div>\n          : undefined}\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport C_SelectField from './components/SelectField';\nimport {C_Calendar} from './components/Calendar';\nimport { HandlerProvider } from './providers/handler';\nimport { MaintenanceOrderProvider } from './providers/MaintenanceOrder';\nimport { C_Button, C_ButtonFloat, C_MenuButton } from './components/Button';\nimport { C_Table } from './components/Table';\nimport { C_MaintenanceOrder } from './components/Order';\nimport { C_Loading } from './components/Loading';\nimport { MaintenanceOrderHelper as HelperOM } from './helpers/MaintenanceOrder';\nimport { StringHelper } from './helpers/String';\nimport { DateHelper } from './helpers/Date';\nimport { C_ToolTip } from './components/ToolTip';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listStatus: [\n        { label: \"TODOS\", value: \"all\" },\n        { label: \"ABERTA\", value: \"created\" },\n        { label: \"ASSINADA\", value: \"signatured\" },\n        { label: \"ASSINATURA PENDENTE\", value: \"signature_pending\" },\n        { label: \"ASSUMIDA\", value: \"assumed\" },\n        { label: \"CANCELADA\", value: \"canceled\" },\n        { label: \"FINALIZADA\", value: \"finished\" },\n        { label: \"INICIADA\", value: \"started\" },\n        { label: \"PARADA\", value: \"stopped\" },\n        { label: \"PAUSADA\", value: \"paused\" },\n      ],\n\n      listPriority: [\n        { label: \"TODAS\", value: \"all\" },\n        { label: \"URGENTE\", value: \"urgent\" },\n        { label: \"ALTA\", value: \"high\" },\n        { label: \"MÉDIA\", value: \"medium\" },\n        { label: \"BAIXA\", value: \"low\" },\n      ],\n      to: new Date(),\n      from: new Date(\"2020-05-01\"),\n      selectedStatus: \"created\",\n      selectedPriority: \"all\",\n      showOrdersList: false\n    }\n\n    this.listOrders = this.listOrders.bind(this);\n    this.calculateHeight = this.calculateHeight.bind(this);\n    this.provider = new HandlerProvider(new MaintenanceOrderProvider(), \"ordem de manutenção\")\n  }\n\n  calculateHeight() {\n    const height = document.getElementById('searchTable').clientHeight;\n\n    const rowsPerPage = Math.round(height/60)-2;\n\n    // this.setState({ height, rowsPerPage });\n\n    return rowsPerPage;\n  }\n\n  async listOrders() {\n    const { selectedPriority, selectedStatus, from, to } = this.state\n\n    let sendData = {}\n\n    if (this.state.selectedPriority != \"all\") sendData.priority = this.state.selectedPriority;\n    if (this.state.selectedStatus != \"all\") sendData.orderStatus  = this.state.selectedStatus;\n    \n    sendData.openedDate = this.provider.provider.mountBetweenDate(from,to, false)\n\n    let response = await this.provider.getList(sendData);\n    let list = []\n    \n    if (response.success) {\n      list = response.data\n    }\n\n    var orders = HelperOM.sortOrders(list)\n\n    this.setState({ orders , showLoading: false })\n\n  }\n\n  render() {\n    // console.log(\"Dashboard -> render -> fields\", this.state)\n    var orders = this.state.orders\n    var orderDetails = this.state.orderDetails;\n    // console.log(\"Dashboard -> render -> orders\", orders)\n\n    const columns = [\n      { name: \"Abertura\", property: \"openedDate\", defaultValue: \"Não identificado\", format: (value) => DateHelper.formatDate(value) },\n      { name: \"Descrição\", property:\"description\", defaultValue: \"Sem Descrição\" },\n      { name: \"Equipamento\", property:\"orderEquipment[0].equipment.description\", defaultValue: \"Sem Equipamento\" },\n      { name: \"Prioridade\", property: \"priority\", defaultValue: \"Sem Prioridade\", format: (value) => HelperOM.translate(\"priority\", value) },\n      { name: \"Status\", property: \"orderStatus\", defaultValue: \"Sem Status\", format: (value) => HelperOM.translate(\"status\", value) },\n    ]\n\n    return (\n      this.state.showOrderDetails ?\n        <div id=\"order\" style={{ width: \"100%\" }}>\n          <C_MaintenanceOrder\n            orderId={orderDetails.id}\n            onClose={() => this.setState({ showOrderDetails: false })}\n          />\n        </div>\n        :\n        <div style={{ width: \"100%\" }}>\n          <div style={{ padding: \"15px 0px 2px 20px\", borderBottom: \"2px solid silver\", position: \"fixed\", width: \"100%\", backgroundColor: \"#fafafa\", zIndex: 2 }}>\n            <h1 style={{ width: \"100%\", color: \"black\" }}>Monitor de Ordens de Manutenção</h1>\n            <div className=\"md-grid\" style={{ padding: 0 }}>\n                <C_Calendar className=\"md-cell md-cell--2\"\n                  id=\"from\" name=\"from\"\n                  value={this.state.from} onChange={(e) => this.setState({from: e.target.value})}\n                  label={\"De\"} \n                />\n                <C_Calendar\n                  className=\"md-cell md-cell--2\"\n                  id=\"to\" name=\"to\"\n                  value={this.state.to} onChange={(e) => this.setState({to: e.target.value})}\n                  label={\"Até\"}\n                />\n                <div className=\"md-cell md-cell--2 md-cell--bottom\">\n                  <C_SelectField\n                    id=\"orderStatus\" name=\"orderStatus\"\n                    onChange={(e) => this.setState({selectedStatus: e.target.value})}\n                    value={this.state.selectedStatus} label={\"Status\"}\n                    list={this.state.listStatus}\n                    labelElement=\"label\" valueElement=\"value\"\n                    style={{ width: \"100%\" }} \n                  />\n                </div>\n                <div className=\"md-cell md-cell--2 md-cell--bottom\">\n                  <C_SelectField\n                    id=\"priority\" name=\"priority\"\n                    onChange={(e) => this.setState({selectedPriority: e.target.value})}\n                    value={this.state.selectedPriority}\n                    label={\"Prioridade\"}\n                    list={this.state.listPriority}\n                    labelElement=\"label\" valueElement=\"value\"\n                    style={{ width: \"100%\"}} \n                  />\n                </div>\n                <C_Button \n                  secondary={true}\n                  className=\"md-cell md-cell--middle md-cell--2\"\n                  style={{ width: \"10%\", marginTop:15}}\n                  label={\"LISTAR\"}\n                  action={() => {\n                    this.listOrders();\n                    this.setState({ showLoading: true })\n                  }}\n                />\n            </div>\n          </div>\n          <div style={{ width: \"100%\", paddingBottom: !this.state.showOrdersList ? 160 : 150 }}> </div>\n          <div style={{ position: \"relative\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n            <div style={{ position: \"absolute\", top: !this.state.showOrdersList ? -5 : 10, right: 12 }}>\n              {orders && orders.length > 0 ?\n                <C_ToolTip position=\"left\" tooltip={!this.state.showOrdersList ? \"Exibir como Lista\" : \"Exibir como Cartões\"}>\n                  <C_ButtonFloat\n                    icon={!this.state.showOrdersList ? \"reorder\" : \"view_module\"}\n                    secondary\n                    style={{ width: 51, height: 51 }}\n                    iconSize={25}\n                    action={() => this.setState({ showOrdersList: !this.state.showOrdersList ? true : false })}\n                  />\n                </C_ToolTip>\n                : undefined}\n            </div>\n\n            {this.state.showOrdersList && !this.state.showLoading ?\n              <div id=\"searchTable\" style={{ marginTop: 40, width: \"100%\", boxShadow: \"1px 3px 12px 1px #918f8e\" }}>\n                <C_Table\n                  columns={columns}\n                  content={this.state.orders}\n                  onClick={(event) => {\n                    this.setState({ showOrderDetails: true, orderDetails: event })\n                  }}\n                  showEffect={true}\n                  showPagination={true}\n                  hasFilter={true}\n                  rowsPerPage={10}\n                >\n                </C_Table>\n              </div>\n\n              : undefined}\n\n            {this.state.showLoading ?\n              <div style={{ marginTop: \"10%\" }}>\n                <C_Loading\n                  scale={4}\n                  footer={true}\n                  message={\"Carregando Ordens...\"}\n                />\n              </div>\n            : undefined}\n\n            {orders && !this.state.showLoading && orders.length == 0 ?\n              <h1 style={{marginTop:\"10%\"}} className=\"slideInLeft\">{\"Nenhum registro encontrado...\"}</h1>\n            :\n            orders && !this.state.showLoading && orders.map((order, i) => {\n              return (\n                !this.state.showOrdersList ?\n                  <fieldset onClick={() => { this.setState({ showOrderDetails: true, orderDetails: order }) }} className={\"effectfront\"} style={{ cursor: \"pointer\", position: \"relative\", width:\"30%\",minWidth: \"30%\", borderRadius: 5, border: \"1px solid silver\", marginBottom: 20, padding: 10, marginTop: 40, marginRight: 20 }}>\n                    <legend style={{ width: \"auto\", border: \"none\", paddingRight: 5, paddingLeft: 5, marginLeft: 10, marginBottom: 0, color: \"#666666a6\", fontWeight: \"bold\", fontSize: 25, marginTop: 100 }}>{order.orderNumber ? order.orderNumber : \"SEM TÍTULO\"}</legend>\n                    <div style={{}}>\n                      <div style={{ borderRadius: 5, top: 16, right: 0, position: \"absolute\", height: 194, width: 40, backgroundColor: HelperOM.translate(\"color\", order.priority) }}></div>\n                      <div style={{ width: '90%',display: \"flex\" }}>\n                        <strong style={{ marginRight: 5, fontSize: 16 }}>Descrição:</strong>\n                        <p style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", width: \"auto\", overflow: \"hidden\", fontSize: 15, marginTop: 1 }}>{order.description}</p>\n                      </div>\n                      <div style={{ width:'90%', display: \"flex\" }}>\n                        <strong style={{ marginRight: 5, fontSize: 16 }}>Equipamento:</strong>\n                        <p style={{whiteSpace:\"nowrap\", textOverflow:\"ellipsis\", overflow:\"hidden\", fontSize: 15, marginTop: 1 }}>\n                          {order.orderEquipment[0] ? order.orderEquipment[0].equipment.description : \"Sem Equipamento\"}\n                        </p>\n                      </div>\n                      <div style={{ display: \"flex\" }}>\n                        <strong style={{ marginRight: 5, fontSize: 16 }}>Prioridade:</strong><p style={{ fontSize: 15, marginTop: 1 }}>{HelperOM.translate(\"priority\", order.priority)}</p>\n                      </div>\n                      <div style={{ display: \"flex\" }}>\n                        <strong style={{ marginRight: 5, fontSize: 16 }}>Abertura:</strong><p style={{ fontSize: 15, marginTop: 1 }}>{DateHelper.formatDate(order.openedDate)}</p>\n                      </div>\n                      <div style={{ display: \"flex\" }}>\n                        <strong style={{ marginRight: 5, fontSize: 16 }}>Status:</strong><p style={{ fontSize: 15, marginTop: 1 }}>{HelperOM.translate(\"status\", order.orderStatus ? order.orderStatus : \"no_status\")}</p>\n                      </div>\n                    </div>\n                  </fieldset>\n                : undefined\n              )\n            })\n            }\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Dashboard;","import { Card, CardTitle, CardText, Avatar } from 'react-md';\nimport React, { Component } from 'react';\nimport '../index.css';\n\nclass C_Card extends Component {\n\n    render() {\n      return (\n        <Card \n          style={this.props.style}\n          className={this.props.className} \n          onClick={this.props.onClick}\n          onMouseLeave={this.props.onMouseLeave}>\n            <CardTitle\n             title={this.props.title} \n             subtitle={this.props.subtitle} \n             avatar={!this.props.hideAvatar ? <Avatar contentStyle={this.props.avatarStyle} icon={this.props.icon} role=\"presentation\" /> : undefined}\n            />\n            {this.props.children}\n        </Card>\n      );\n    }\n}\n  \nexport default C_Card;","import React, { Component } from 'react';\nimport {C_Button} from '../components/Button';\nimport '../index.css';\n\nclass C_CrudButtons extends Component {\n\n  render() {\n    return (\n      <div className=\"md-grid\">\n        <div className=\"md-cell md-cell--6 md-cell--bottom\">\n          <C_Button\n            secondary={true}\n            label={\"Deletar\"}\n            disabled={!this.props.crudLevel}\n            action={this.props.onDelete}\n            style={{width:\"70%\"}}\n          />\n        </div>\n        <div className=\"md-cell md-cell--3 md-cell--bottom\">\n          <C_Button\n            secondary={true}\n            label={\"Limpar\"}\n            action={this.props.onClean}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n        <div className=\"md-cell md-cell--3 md-cell--bottom\">\n          <C_Button\n            // style={{ marginLeft: 20 }}\n            primary={true}\n            label={\"Salvar\"}\n            action={this.props.onSave}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default C_CrudButtons;","import { CrudProvider } from \"./Crud\";\n\nexport class MachineTypeProvider extends CrudProvider {\n\n constructor() {\n  super('machine-types')\n }\n}","import React, { Component } from 'react';\nimport '../index.css';\n\nimport { C_Table } from './Table';\n\nclass C_SearchTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      height: 0,\n      rowsPerPage: 0,\n    }\n\n    this.onClick = this.onClick.bind(this);\n\n  }\n\n  onClick(event) {\n    if (this.props.onClick)\n      this.props.onClick(event);\n\n    if (this.props.extraFunction)\n      this.props.extraFunction();\n  }\n\n  componentDidMount() {\n    const height = document.getElementById('searchTable').clientHeight;\n\n    const rowsPerPage = Math.round(height/60)-2;\n\n    this.setState({ height, rowsPerPage });\n  }\n\n  render() {\n\n    return (\n      <div id = \"searchTable\" style={{ backgroundColor: \"white\", minWidth: 400, width: \"65vw\", minHeight: 500, height: \"76vh\", borderRadius: 5 }}>\n        <C_Table\n          columns={this.props.columns}\n          content={this.props.content}\n          onClick={this.onClick}\n          showEffect={true}\n          showPagination={true}\n          rowsPerPage={this.state.rowsPerPage}\n          hasFilter={true}\n        >\n        </C_Table>\n      </div>\n    );\n  }\n}\n\nexport default C_SearchTable;","import React, { Component } from 'react';\nimport { FontIcon, Autocomplete } from 'react-md';\nimport Fuse from 'fuse.js';\nimport '../index.css';\n\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nimport C_SearchTable from './SearchTable';\n\nclass C_AutoComplete extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [],\n      value: this.props.value,\n      description: this.props.description,\n      toggleIcon: false,\n    }\n\n    this.filter = this.filter.bind(this);\n    this.onAutocomplete = this.onAutocomplete.bind(this);\n    this.onChangeAutoComplete = this.onChangeAutoComplete.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onClickIcon = this.onClickIcon.bind(this);\n    this.tableSelected = this.tableSelected.bind(this);\n  }\n\n  componentDidUpdate() {\n\n    this.state.description = this.props.description || \"description\";\n\n    let list = this.props.list.map((item => item[this.state.description] ))\n  \n    if (JSON.stringify(list) !== JSON.stringify(this.state.list)) {\n      this.setState({ list })\n    }\n      \n\n    this.indexer = new Fuse(list.map((data) => ({ primaryText: data })), {\n      keys: [{ name: 'primaryText', weight: 1 }],\n    });\n  }\n\n  filter = (data, filterText, dataLabel) => {\n    return this.indexer.search(filterText);\n  };\n\n  onAutocomplete(suggestion, suggestionIndex, matches) {\n    let matched=matches[suggestionIndex]\n    let value = matched? matched.primaryText : \"\"\n    this.setState({ value })\n    this.props.onChange(value, this.props.name)\n  }\n\n  onChangeAutoComplete(value, event) {\n    this.setState({ value })\n    this.props.onChange(value, this.props.name)\n  }\n\n  onBlur() {\n    let value = this.state.value\n    let item = this.props.list.find(element => element[this.state.description] === value)\n    // console.log(\"onBlur -> item\", item)\n    // console.log(\"onBlur -> this.props\", this.props)\n\n    if( item === undefined) {\n      value = \"\"\n      this.setState({ value })\n      this.props.onChange(value, this.props.name)\n      this.props.dataSelected(undefined, this.props.name)\n      return\n    }\n\n    this.props.onChange(value, this.props.name)\n    this.props.dataSelected(item.id, this.props.name)\n  }\n\n  onClickIcon() {\n    if (!Array.isArray(this.props.searchColumns)) return;\n\n    confirmAlert({\n      customUI: ({ onClose }) => (\n        <C_SearchTable\n          columns={this.props.searchColumns}\n          content={this.props.list}\n          onClick={this.tableSelected}\n          extraFunction={onClose}\n        />\n      )\n    });\n  }\n\n  tableSelected(objectValue) {\n    // console.log('tableSelected', objectValue);\n\n    if (!objectValue) return\n\n    const value = objectValue[this.state.description]\n    this.setState({ value })\n    \n    this.props.onChange(value, this.props.name)\n    this.props.dataSelected(objectValue.id, this.props.name)\n\n    // this.onClickIcon();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Autocomplete\n          id={this.props.name}\n          required={this.props.required}\n          name={this.props.name}\n          disabled={this.props.disabled}\n          value={this.state.value}\n          label={this.props.label}\n          placeholder={this.props.placeholder}\n          dataLabel={this.props.dataLabel}\n          className={this.props.className}\n          data={this.state.list}\n          filter={this.filter}\n          onAutocomplete={this.onAutocomplete}\n          onChange={this.onChangeAutoComplete}\n          onBlur={this.onBlur}\n          style={this.props.style}\n          deleteKeys={this.props.deleteKeys}\n          rightIcon={this.props.rightIcon &&\n            <FontIcon\n              style={{ fontSize: 30, cursor: \"pointer\" }}\n              onClick={this.onClickIcon}\n            >\n              {this.props.rightIcon}\n          </FontIcon>\n          }\n          description={this.props.description}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default C_AutoComplete;","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { MachineTypeProvider } from '../providers/MachineType';\nimport { ObjectHelper } from '../helpers/Object';\nimport { machineTypeColumns } from '../helpers/SearchModel';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateMachineType extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      list: [],\n      autocomplete : '',\n      searchColumns: machineTypeColumns(),\n    };\n\n    this.provider = new HandlerProvider(new MachineTypeProvider(), \"tipo de máquina\")\n\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList(){\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    let fields = this.state.fields;\n    let autocomplete = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete });\n    this.loadList()\n  }\n\n  delete() {\n    let machineType = this.state.fields;\n    this.provider.delete(machineType.id,this.clean)\n  }\n\n  save() {\n    let machineType = this.state.fields;\n    this.provider.save(machineType,this.clean)\n  }\n\n  onChange(e, name) {\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields })\n  }\n\n  autocompleteSelect(id, name) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description\n    }\n\n    this.setState({ fields })\n  } \n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Tipo de Máquina\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Tipo de Máquina\"\n              placeholder=\"Tipo de Máquina\"\n              rightIcon={\"search\"}\n              searchColumns={this.state.searchColumns}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateMachineType;","import { CrudProvider } from \"./Crud\";\n\nexport class MachineComponentsProvider extends CrudProvider {\n\n constructor() {\n  super('machine-components')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { MachineComponentsProvider } from '../providers/MachineComponents';\nimport { MachineTypeProvider } from '../providers/MachineType';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\n\nclass CreateMachineComponents extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      machineType: '',\n      fields: {},\n      list: [],\n      machineTypeList: []\n    };\n\n    this.provider = new HandlerProvider(new MachineComponentsProvider(), \"componente de máquina\")\n    this.machineTypeProvider = new HandlerProvider(new MachineTypeProvider(), \"Tipo de Máquina\")\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.loadListMachineType = this.loadListMachineType.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteMachineType = this.autocompleteMachineType.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n      console.log(\"TCL: CreateDefectCause -> loadList -> list\", list)\n    }\n    this.setState({ list })\n  }\n\n  async loadListMachineType() {\n    let machineTypeList = []\n    let response = await this.machineTypeProvider.getList();\n    if (response.success) {\n      machineTypeList = response.data\n    }\n    this.setState({ machineTypeList })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n  \n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let machineType = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, machineType });\n    this.loadList()\n    this.loadListMachineType()\n  }\n\n  delete() {\n    let machineComponent = this.state.fields;\n    this.provider.delete(machineComponent.id,this.clean)\n  }\n\n  save() {\n    let machineComponent = this.state.fields;\n    this.provider.save(machineComponent,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"machineType\") {\n      this.setState({ machineType: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, inputName) {\n\n    if (inputName === \"id\") {\n      this.autocompleteId(id)\n    } else if (inputName === \"machineType\") {\n      this.autocompleteMachineType(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n    console.log(\"TCL: CreateDefectCause -> autocompleteId -> item\", item)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      machineType: item.machineType.id\n    }\n\n    let machineType = item.machineType.description\n    this.setState({ fields, machineType })\n    return\n  }\n\n  autocompleteMachineType(id) {\n\n    if (id === undefined) {\n      this.setState({ machineType: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.machineType = id\n\n    this.setState({ fields })\n    return\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"70%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Componentes de Máquina\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Componente\"}\n              placeholder=\"Componente\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_AutoComplete\n              id=\"machineType\"\n              name=\"machineType\"\n              value={this.state.machineType}\n              label={\"Tipo de Máquina\"}\n              placeholder=\"Tipo de Máquina\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.machineTypeList}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição do Componente\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateMachineComponents;","import { CrudProvider } from \"./Crud\";\n\nexport class SectorProvider extends CrudProvider {\n\n constructor() {\n  super('sectors')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { SectorProvider } from '../providers/Sector';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateSector extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      autocomplete: '',\n      list: []\n    };\n\n    this.provider = new HandlerProvider(new SectorProvider(), \"setor\")\n\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    let fields = this.state.fields;\n    let autocomplete = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete });\n    this.loadList()\n  }\n\n  delete() {\n    let sector = this.state.fields;\n    this.provider.delete(sector.id, this.clean)\n  }\n\n  save() {\n    let sector = this.state.fields;\n    this.provider.save(sector, this.clean)\n  }\n\n  onChange(e, name) {\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields })\n\n  }\n\n  autocompleteSelect(id, name) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description\n    }\n\n    this.setState({ fields })\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        onHide={this.hideModal}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Setor\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={this.hideModal}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              type=\"search\"\n              label=\"Código do Setor\"\n              placeholder=\"Código do Setor\"\n              rightIcon={\"search\"}\n              list={this.state.list}\n              onChange={this.onChange}\n              value={this.state.autocomplete}\n              dataSelected={this.autocompleteSelect}\n            /><br></br>\n            <C_TextField\n              name=\"description\"\n              id=\"description\"\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateSector;","import { CrudProvider } from \"./Crud\";\n\nexport class InstallationAreaProvider extends CrudProvider {\n\n constructor() {\n  super('installation-areas')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { InstallationAreaProvider } from '../providers/InstallationArea';\nimport { SectorProvider } from '../providers/Sector';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\n\nclass CreateInstallationArea extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      sector: '',\n      fields: {},\n      list: [],\n      sectorList: []\n    };\n\n    this.provider = new HandlerProvider(new InstallationAreaProvider(), \"local de instalação\")\n    this.sectorProvider = new HandlerProvider(new SectorProvider(), \"setor\")\n\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.loadlListSector = this.loadlListSector.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteSector = this.autocompleteSector.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n      console.log(\"TCL: Installation -> loadList -> list\", list)\n    }\n    this.setState({ list })\n  }\n\n  async loadlListSector() {\n    let sectorList = []\n    let response = await this.sectorProvider.getList();\n    if (response.success) {\n      sectorList = response.data\n    }\n    this.setState({ sectorList })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let sector = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, sector });\n    this.loadList()\n    this.loadlListSector()\n  }\n\n  delete() {\n    let installationArea = this.state.fields;\n    this.provider.delete(installationArea.id,this.clean)\n  }\n\n  save() {\n    let installationArea = this.state.fields;\n    this.provider.save(installationArea,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"sector\") {\n      this.setState({ sector: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, inputName) {\n\n    if (inputName === \"id\") {\n      this.autocompleteId(id)\n    } else if (inputName === \"sector\") {\n      this.autocompleteSector(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n    console.log(\"TCL: Installation -> autocompleteId -> item\", item)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      sector: item.sector.id\n    }\n\n    let sector = item.sector.description\n    this.setState({ fields, sector })\n    return\n  }\n\n  autocompleteSector(id) {\n\n    if (id === undefined) {\n      this.setState({ sector: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.sector = id\n\n    this.setState({ fields })\n    return\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"70%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Local de Instalação\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              dataSelected={this.autocompleteSelect}\n              list={this.state.list}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Código Local de Instalação\"\n              placeholder=\"Código Local de Instalação\"\n              rightIcon={\"search\"}\n            /><br></br>\n            <C_AutoComplete\n              id=\"sector\"\n              name=\"sector\"\n              value={this.state.sector}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Setor\"\n              placeholder=\"Setor\"\n              rightIcon={\"search\"}\n              dataSelected={this.autocompleteSelect}\n              list={this.state.sectorList}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição do Local\"\n              placeholder=\"Descrição do Local\"\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateInstallationArea;","import { CrudProvider } from \"./Crud\";\n\nexport class UnitMeasurementProvider extends CrudProvider {\n\n constructor() {\n  super('measurement-units')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { UnitMeasurementProvider } from '../providers/UnitMeasurement';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateUnitMeasurement extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      autocomplete: '',\n      list: []\n    };\n\n    this.provider = new HandlerProvider(new UnitMeasurementProvider(), \"unidade de medida\")\n    this.loadList()\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    \n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    let fields = this.state.fields;\n    let autocomplete = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete });\n    this.loadList()\n  }\n\n  delete() {\n    let unitMeasurement = this.state.fields;\n    this.provider.delete(unitMeasurement.id, this.clean)\n  }\n\n  save() {\n    let unitMeasurement = this.state.fields;\n    this.provider.save(unitMeasurement, this.clean)\n  }\n\n  onChange(e, name) {\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields })\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, name) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description\n    }\n\n    this.setState({ fields })\n  }\n\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Unidade de Medida\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Unidade de Medida\"}\n              placeholder=\"Unidade de Medida\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateUnitMeasurement;","import { CrudProvider } from \"./Crud\";\n\nexport class PartProvider extends CrudProvider {\n\n constructor() {\n  super('items')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { UnitMeasurementProvider } from '../providers/UnitMeasurement';\nimport { PartProvider } from '../providers/Part';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\n\nclass CreateParts extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      measurementUnit: '',\n      fields: {},\n      list: [],\n      unitMeasurementList: []\n    };\n\n    this.provider = new HandlerProvider(new PartProvider(), \"peça\")\n    this.unitProvider = new HandlerProvider(new UnitMeasurementProvider(), \"unidade de medida\");\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.loadListUnits = this.loadListUnits.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteUnit = this.autocompleteUnit.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  async loadListUnits() {\n    let unitMeasurementList = []\n    let response = await this.unitProvider.getList();\n    if (response.success) {\n      unitMeasurementList = response.data\n    }\n    this.setState({ unitMeasurementList })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let measurementUnit = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, measurementUnit });\n    this.loadList()\n    this.loadListUnits()\n  }\n\n  delete() {\n    let part = this.state.fields;\n    this.provider.delete(part.id, this.clean)\n  }\n\n  save() {\n    let part = this.state.fields;\n    this.provider.save(part, this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"measurementUnit\") {\n      this.setState({ measurementUnit: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, inputName) {\n    console.log(\"TCL: CreateParts -> autocompleteSelect -> id\", id)\n    console.log(\"TCL: CreateParts -> autocompleteSelect -> inputName\", inputName)\n\n    if (inputName === \"id\") {\n      this.autocompleteId(id)\n    } else if (inputName === \"measurementUnit\") {\n      this.autocompleteUnit(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n    console.log(\"TCL: CreateParts -> autocompleteId -> item\", item)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      measurementUnit: item.measurementUnit.id\n    }\n\n    let measurementUnit = item.measurementUnit.description\n    this.setState({ fields, measurementUnit })\n    return\n  }\n\n  autocompleteUnit(id) {\n    console.log(\"TCL: CreateParts -> autocompleteUnit -> id\", id)\n\n    if (id === undefined) {\n      this.setState({ measurementUnit: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.measurementUnit = id\n\n    this.setState({ fields })\n    return\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"70%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Peças\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Código da Peça\"\n              placeholder=\"Código da Peça\"\n              rightIcon={\"search\"}\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_AutoComplete\n              id=\"measurementUnit\"\n              name=\"measurementUnit\"\n              value={this.state.measurementUnit}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Unidade de Medida\"\n              placeholder=\"Unidade de Medida\"\n              rightIcon={\"search\"}\n              list={this.state.unitMeasurementList}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição da Peça\"\n              placeholder=\"Descrição da Peça\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateParts;","import { CrudProvider } from \"./Crud\";\n\nexport class NoteProvider extends CrudProvider {\n\n constructor() {\n  super('default-observations')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { NoteProvider } from '../providers/Note';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateDefaultNote extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      autocomplete:\"\",\n      list:[]\n    };\n\n    this.provider = new HandlerProvider(new NoteProvider(), \"observação padrão\")\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  autocompleteSelect(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n    }\n\n    this.setState({ fields })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n\n    ObjectHelper.clearFields(fields);\n\n    this.loadList()\n    this.setState({ fields, autocomplete:\"\" });\n  }\n\n  delete() {\n    let note = this.state.fields;\n    this.provider.delete(note.id,this.clean)\n  }\n\n  save() {\n    let note = this.state.fields;\n    this.provider.save(note,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Observação Padrão\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Buscar Observação Padrão\"}\n              placeholder=\"Buscar Observação Padrão\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição da Observação\"\n              placeholder=\"Descrição da Observação\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateDefaultNote;","import { CrudProvider } from \"./Crud\";\n\nexport class OperationProvider extends CrudProvider {\n\n constructor() {\n  super('default-operations')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { OperationProvider } from '../providers/Operation';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateDefaultOperation extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      autocomplete:\"\",\n      list: []\n    };\n\n    this.provider = new HandlerProvider(new OperationProvider(), \"operação padrão\")\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  autocompleteSelect(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n    }\n\n    this.setState({ fields })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n\n    ObjectHelper.clearFields(fields);\n\n    this.loadList()\n    this.setState({ fields, autocomplete: \"\" });\n  }\n\n  delete() {\n    let operation = this.state.fields;\n    this.provider.delete(operation.id,this.clean)\n  }\n\n  save() {\n    let operation = this.state.fields;\n    this.provider.save(operation,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Operação Padrão\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Buscar Operação Padrão\"}\n              placeholder=\"Buscar Operação Padrão\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateDefaultOperation;","import { CrudProvider } from \"./Crud\";\n\nexport class OrderTypeProvider extends CrudProvider {\n\n constructor() {\n  super('order-types')\n }\n}","import { CrudProvider } from \"./Crud\";\n\nexport class CauseProvider extends CrudProvider {\n\n constructor() {\n  super('defect-origins')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { OrderTypeProvider } from '../providers/OrderType';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateOrderType extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      list: [], \n      autocomplete:\"\",\n    };\n\n    this.provider = new HandlerProvider(new OrderTypeProvider(), \"tipo de ordem de manutenção\")\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n      console.log(\"TCL: CreateOrderType -> loadList -> list\", list)\n    }\n    this.setState({ list })\n  }\n\n  autocompleteSelect(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n    }\n\n    this.setState({ fields })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n\n    ObjectHelper.clearFields(fields);\n\n    this.loadList()\n    this.setState({ fields, autocomplete: \"\" });\n    \n  }\n\n  delete() {\n    let orderType = this.state.fields;\n    this.provider.delete(orderType.id,this.clean)\n  }\n\n  save() {\n    let orderType = this.state.fields;\n    this.provider.save(orderType,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Tipo da Ordem de Manutenção\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Tipo de Ordem\"}\n              placeholder=\"Tipo de Ordem\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateOrderType;","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { CauseProvider } from '../providers/Cause';\nimport { MachineTypeProvider } from '../providers/MachineType';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateDefectCause extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      machineType: '', \n      fields: {},\n      list: [],\n      machineTypeList: []\n    };\n    \n    this.provider = new HandlerProvider(new CauseProvider(), \"causa do defeito\")\n    this.machineTypeProvider = new HandlerProvider(new MachineTypeProvider(), \"Tipo de Máquina\")\n\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.loadListMachineType = this.loadListMachineType.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteMachineType = this.autocompleteMachineType.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n      console.log(\"TCL: CreateDefectCause -> loadList -> list\", list)\n    }\n    this.setState({ list })\n  }\n\n  async loadListMachineType() {\n    let machineTypeList = []\n    let response = await this.machineTypeProvider.getList();\n    if (response.success) {\n      machineTypeList = response.data\n    }\n    this.setState({ machineTypeList })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let machineType = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, machineType });\n    this.loadList()\n    this.loadListMachineType()\n  }\n\n  delete() {\n    let cause = this.state.fields;\n    this.provider.delete(cause.id, this.clean)\n  }\n\n  save() {\n    let cause = this.state.fields;\n    this.provider.save(cause, this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"machineType\") {\n      this.setState({ machineType: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, inputName) {\n\n    if (inputName === \"id\"){\n      this.autocompleteId(id)\n    } else if (inputName === \"machineType\") {\n      this.autocompleteMachineType(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n    console.log(\"TCL: CreateDefectCause -> autocompleteId -> item\", item)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      machineType: item.machineTypeId\n    }\n\n    let machineType=item.machineTypeId\n    this.setState({ fields, machineType })\n    return\n  }\n\n  autocompleteMachineType(id) {\n    \n    if (id === undefined) {\n      this.setState({ machineType: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.machineType = id\n\n    this.setState({ fields })\n    return\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Causa do Defeito\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Causa do Defeito\"}\n              placeholder=\"Causa do Defeito\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_AutoComplete\n              id=\"machineType\"\n              name=\"machineType\"\n              value={this.state.machineType}\n              label={\"Tipo de Máquina\"}\n              placeholder=\"Tipo de Máquina\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.machineTypeList}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição da Causa\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateDefectCause;","import { CrudProvider } from \"./Crud\";\n\nexport class DiagnosticProvider extends CrudProvider {\n\n constructor() {\n  super('defect-symptoms')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { DiagnosticProvider } from '../providers/Diagnostic';\nimport { ObjectHelper } from '../helpers/Object';\nimport { MachineTypeProvider } from '../providers/MachineType';\nimport C_AutoComplete from '../components/AutoComplete';\n\n\nclass CreateDefectDiagnostic extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      machineType: '',\n      fields: {},\n      list: [],\n      machineTypeList: []\n    };\n\n    this.provider = new HandlerProvider(new DiagnosticProvider(), \"sintoma do defeito\")\n    this.machineTypeProvider = new HandlerProvider(new MachineTypeProvider(), \"Tipo de Máquina\");\n\n    this.loadList();\n    this.loadListMachineType();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.loadList = this.loadList.bind(this);\n    this.loadListMachineType = this.loadListMachineType.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteMachineType = this.autocompleteMachineType.bind(this);\n\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  async loadListMachineType() {\n    let machineTypeList = this.state.machineTypeList;\n    let response = await this.machineTypeProvider.getList();\n    if (response.success) {\n      machineTypeList = response.data\n    }\n    this.setState({ machineTypeList })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let machineType = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, machineType });\n    this.loadList()\n    this.loadListMachineType()\n  }\n\n  delete() {\n    let diagnostic = this.state.fields;\n    this.provider.delete(diagnostic.id,this.clean)\n  }\n\n  save() {    \n    let diagnostic = this.state.fields;\n    this.provider.save(diagnostic,this.clean)\n  }\n\n  onChange(e, name) {\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"machineType\") {\n      this.setState({ machineType: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  autocompleteSelect(id, inputName) {\n\n    if (inputName === \"id\") {\n      this.autocompleteId(id)\n    } else if (inputName === \"machineType\") {\n      this.autocompleteMachineType(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      machineType: item.machineTypeId\n    }\n\n    let machineType = item.machineTypeId\n    this.setState({ fields, machineType })\n    return\n  }\n\n  autocompleteMachineType(id) {\n\n    if (id === undefined) {\n      this.setState({ machineType: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.machineType = id\n\n    this.setState({ fields })\n    return\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"70%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Sintoma do Defeito\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Sintoma do Defeito\"\n              placeholder=\"Sintoma do Defeito\"\n              rightIcon={\"search\"}\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n            /><br></br>\n            <C_AutoComplete\n              id=\"machineType\"\n              name=\"machineType\"\n              value={this.state.machineType}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Tipo de Máquina\"\n              placeholder=\"Tipo de Máquina\"\n              rightIcon={\"search\"}\n              list={this.state.machineTypeList}\n              dataSelected={this.autocompleteSelect}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição do Sintoma\"\n              placeholder=\"Descrição do Sintoma\"\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateDefectDiagnostic;","import { CrudProvider } from \"./Crud\";\n\nexport class ClassificationProvider extends CrudProvider {\n\n constructor() {\n  super('order-classifications')\n }\n}","import { CrudProvider } from \"./Crud\";\n\nexport class MachineProvider extends CrudProvider {\n\n constructor() {\n  super('equipments')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { ClassificationProvider } from '../providers/Classification';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateClassification extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      autocomplete: '',\n      list: [],\n    };\n\n    this.provider = new HandlerProvider(new ClassificationProvider(), \"classificação da ordem\")\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n      console.log(\"TCL: CreateClassification -> loadList -> list\", list)\n    }\n    this.setState({ list })\n  }\n\n  autocompleteSelect(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n    }\n\n    this.setState({ fields })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete: \"\"});\n    this.loadList()\n  }\n\n  delete() {\n    let classification = this.state.fields;\n    this.provider.delete(classification.id,this.clean)\n  }\n\n  save() {\n    let classification = this.state.fields;\n    this.provider.save(classification,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } \n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n\n    console.log(\"CreateClassification -> render -> this.state.fields\", this.state.fields)\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Classificação da Ordem\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Classificação\"}\n              placeholder=\"Classificação\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateClassification;","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { MachineProvider } from '../providers/Machine';\nimport { MachineTypeProvider } from '../providers/MachineType';\nimport { ObjectHelper } from '../helpers/Object';\nimport { machineTypeColumns, equipmentColumns } from '../helpers/SearchModel';\nimport C_AutoComplete from '../components/AutoComplete';\n\n\nclass CreateMachine extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      machineType: '',\n      fields: {},\n      list: [],\n      machineTypeList: [],\n      equipmentColumns: equipmentColumns(),\n      machineTypeColumns: machineTypeColumns(),\n    };\n\n    this.provider = new HandlerProvider(new MachineProvider(), \"equipamento\")\n    this.machineTypeProvider = new HandlerProvider(new MachineTypeProvider(), \"Tipo de Máquina\")\n    this.loadList()\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.loadListMachineType = this.loadListMachineType.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteMachineType = this.autocompleteMachineType.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n      console.log(\"TCL: CreateDefectCause -> loadList -> list\", list)\n    }\n    this.setState({ list })\n  }\n\n  async loadListMachineType() {\n    let machineTypeList = []\n    let response = await this.machineTypeProvider.getList();\n    if (response.success) {\n      machineTypeList = response.data\n    }\n    this.setState({ machineTypeList })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let machineType = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, machineType });\n    this.loadList()\n    this.loadListMachineType()\n  }\n\n  delete() {\n    let machine = this.state.fields;\n    this.provider.delete(machine.id,this.clean)\n  }\n\n  save() {\n    let machine = this.state.fields;\n    this.provider.save(machine,this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"machineType\") {\n      this.setState({ machineType: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, inputName) {\n\n    if (inputName === \"id\") {\n      this.autocompleteId(id)\n    } else if (inputName === \"machineType\") {\n      this.autocompleteMachineType(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      machineType: item.machineType.id\n    }\n\n    let machineType = item.machineType.description\n    this.setState({ fields, machineType })\n    return\n  }\n\n  autocompleteMachineType(id) {\n\n    if (id === undefined) {\n      this.setState({ machineType: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.machineType = id\n\n    this.setState({ fields })\n    return\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"70%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Equipamento\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Equipamento\"}\n              placeholder=\"Equipamento\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n              searchColumns={this.state.equipmentColumns}\n            /><br></br>\n            <C_AutoComplete\n              id=\"machineType\"\n              name=\"machineType\"\n              value={this.state.machineType}\n              label={\"Tipo de Máquina\"}\n              placeholder=\"Tipo de Máquina\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.machineTypeList}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n              searchColumns={this.state.machineTypeColumns}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição do Equipamento\"\n              placeholder=\"Descrição do Equipamento\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateMachine;","import { CrudProvider } from \"./Crud\";\n\nexport class SuperiorMachineProvider extends CrudProvider {\n\n constructor() {\n  super('superior-equipments')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { SuperiorMachineProvider } from '../providers/SuperiorMachine';\nimport { InstallationAreaProvider } from '../providers/InstallationArea';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateSuperiorMachine extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      autocomplete: '',\n      installationArea: '',\n      fields: {},\n      list: [],\n      areasList: []\n    };\n\n    this.provider = new HandlerProvider(new SuperiorMachineProvider(), \"equipamento superior\")\n    this.areaProvider = new HandlerProvider(new InstallationAreaProvider(), \"local de instalação\")\n    \n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.loadListArea = this.loadListArea.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.autocompleteId = this.autocompleteId.bind(this);\n    this.autocompleteArea = this.autocompleteArea.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  async loadListArea() {\n    let areasList = []\n    let response = await this.areaProvider.getList();\n    if (response.success) {\n      areasList = response.data\n    }\n    this.setState({ areasList })\n  }\n\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    let autocomplete = ''\n    let installationArea = ''\n\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields, autocomplete, installationArea });\n    this.loadList()\n    this.loadListArea()\n  }\n\n  delete() {\n    let superiorMachine = this.state.fields;\n    this.provider.delete(superiorMachine.id, this.clean)\n  }\n\n  save() {\n    let superiorMachine = this.state.fields;\n    this.provider.save(superiorMachine, this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    } else if (name === \"installationArea\") {\n      this.setState({ installationArea: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, inputName) {\n\n    if (inputName === \"id\") {\n      this.autocompleteId(id)\n    } else if (inputName === \"installationArea\") {\n      this.autocompleteArea(id)\n    }\n\n    return\n  }\n\n  autocompleteId(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n    console.log(\"TCL: Installation -> autocompleteId -> item\", item)\n\n    let fields = {\n      id: item.id,\n      description: item.description,\n      installationArea: item.installationArea.id\n    }\n\n    let installationArea = item.installationArea.description\n    this.setState({ fields, installationArea })\n    return\n  }\n\n  autocompleteArea(id) {\n\n    if (id === undefined) {\n      this.setState({ installationArea: '' })\n      return\n    }\n\n    let fields = this.state.fields\n    fields.installationArea = id\n\n    this.setState({ fields })\n    return\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"70%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Equipamento Superior\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              dataSelected={this.autocompleteSelect}\n              list={this.state.list}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Equipamento Superior\"\n              placeholder=\"Equipamento Superior\"\n              rightIcon={\"search\"}\n            /><br></br>\n            <C_AutoComplete\n              id=\"installationArea\"\n              name=\"installationArea\"\n              value={this.state.installationArea}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Local de Instalação\"\n              placeholder=\"Local de Instalação\"\n              rightIcon={\"search\"}\n              dataSelected={this.autocompleteSelect}\n              list={this.state.areasList}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição do Equipamento Superior\"\n              placeholder=\"Descrição do Equipamento Superior\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateSuperiorMachine;","import { CrudProvider } from \"./Crud\";\n\nexport class WorkCenterProvider extends CrudProvider {\n\n constructor() {\n  super('work-centers')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { WorkCenterProvider } from '../providers/WorkCenter';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\n\nclass CreateWorkCenter extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      autocomplete: '',\n      list: []\n    };\n\n    this.provider = new HandlerProvider(new WorkCenterProvider(), \"centro de trabalho\")\n\n    this.loadList()\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    let fields = this.state.fields;\n    let autocomplete = ''\n\n    ObjectHelper.clearFields(fields);\n    \n    this.setState({ fields, autocomplete });\n    this.loadList()\n  }\n\n  delete() {\n    let workCenter = this.state.fields;\n    this.provider.delete(workCenter.id, this.clean)\n  }\n\n  save() {\n    let workCenter = this.state.fields;\n    this.provider.save(workCenter, this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e})\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields })\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, name) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      description: item.description\n    }\n\n    this.setState({ fields })\n  }\n\n  render() {\n    \n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Centro de Trabalho\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              value={this.state.autocomplete}\n              label={\"Código do Centro de Trabalho\"}\n              placeholder=\"Código do Centro de Trabalho\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateWorkCenter;","import { CrudProvider } from \"./Crud\";\n\nexport class SafetyParameterProvider extends CrudProvider {\n\n constructor() {\n  super('safety-params')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport C_SelectField from '../components/SelectField';\nimport {C_CheckBox} from '../components/CheckBox';\nimport { HandlerProvider } from '../providers/handler';\nimport { SafetyParameterProvider } from '../providers/SafetyParameter';\nimport { ObjectHelper } from '../helpers/Object';\n\n\nclass CreateSafetyParameter extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      types: [{\n        label: 'Componente',\n        value: 'A',\n      },\n      {\n        label: 'Setor',\n        value: 'B',\n      },\n      {\n        label: 'Equipamento',\n        value: 'C',\n      },\n      {\n        label: 'Tipo de Máquina',\n        value: 'D',\n      },\n      {\n        label: 'Equipamento Superior',\n        value: 'E',\n      }],\n      fields: {}\n    };\n\n    this.provider = new HandlerProvider(new SafetyParameterProvider(), \"parametro de segurança\")\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n    ObjectHelper.clearFields(fields);\n\n    this.setState({ fields });\n  }\n\n  delete() {\n    let safetyParameter = this.state.fields;\n    this.provider.delete(safetyParameter.id, this.clean)\n  }\n\n  save() {\n    let safetyParameter = this.state.fields;\n    this.provider.save(safetyParameter, this.clean)\n  }\n\n  onChange(e) {\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields })\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    const { fields } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"60%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Parametrização de Segurança\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_TextField\n              id=\"id\"\n              name=\"id\"\n              value={this.state.fields.id}\n              onChange={this.onChange}\n              type=\"search\"\n              label=\"Status de Segurança\"\n              placeholder=\"Status de Segurança\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              required={true}\n              onChange={this.onChange}\n            /><br/>\n            <C_CheckBox\n              id=\"useAlways\"\n              name=\"useAlways\"\n              value={this.state.fields.useAlways}\n              onChange={this.onChange}\n              label={<div style={{ fontSize: 15, color: \"#616161d9\" }}>Usar em todas as Ordens de Manutenção</div>}\n              type=\"checkbox\"\n              style={{}}\n              onChange={this.onChange}\n            />\n            <C_SelectField\n              id=\"entityClass\"\n              name=\"entityClass\"\n              value={this.state.fields.entityClass}\n              type=\"text\"\n              className=\"md-cell md-cell--12\"\n              label={\"Tipo de Registro\"}\n              list={this.state.types}\n              required={false}\n              disabled={this.state.fields.useAlways}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"entityId\"\n              name=\"entityId\"\n              value={this.state.fields.entityId}\n              type=\"search\"\n              label=\"Registro\"\n              placeholder=\"Registro\"\n              rightIcon={\"search\"}\n              block paddedBlock\n              disabled={this.state.fields.useAlways}\n              onChange={this.onChange}\n            /><br></br>\n            <C_TextField\n              id=\"description\"\n              name=\"description\"\n              value={this.state.fields.description}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Descrição\"\n              placeholder=\"Descrição\"\n              block paddedBlock\n              rows={2}\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateSafetyParameter;","import React, { Component } from 'react';\nimport Radio from 'react-md/lib/SelectionControls/Radio';\nimport '../index.css';\n\nclass C_RadioGroup extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n  }\n\n  onChange(pValue) {\n    console.log(\"pValue\",pValue);\n\n    if (this.props.onChange)\n      this.props.onChange({ target: { name: this.props.name, value: pValue } });\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.props.options.map((option, i) =>\n          <Radio\n            key={i}\n            inline\n            style={this.props.style}\n            name={this.props.name}\n            id={this.props.name + \"_\" + i}\n            value={option.value}\n            label={option.label ? option.label : \"\"}\n            checked={this.props.value == option.value}\n            disabled={this.props.disabled}\n            onChange={this.onChange}\n          />\n        )}\n      </div>\n      \n    );\n  }\n}\n\nexport default C_RadioGroup;","import { CrudProvider } from \"./Crud\";\n\nexport class UserProvider extends CrudProvider {\n\n constructor() {\n  super('users')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { C_Button } from '../components/Button';\nimport C_SelectField from '../components/SelectField';\nimport {C_CheckBox} from '../components/CheckBox';\nimport {C_Calendar} from '../components/Calendar';\nimport C_RadioGroup from '../components/RadioGroup';\nimport { HandlerProvider } from '../providers/handler';\nimport { UserProvider } from '../providers/User';\nimport { ObjectHelper } from '../helpers/Object';\nimport C_AutoComplete from '../components/AutoComplete';\n\nclass CreateUser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      list: [],\n      fields: {},\n      autocomplete: '',\n      role: [{\n        name: 'Líder de Setor',\n        id: 'sector_leader',\n      },\n      {\n        name: 'Técnico',\n        id: 'maintainer',\n      },\n      {\n        name: 'Admin',\n        id: 'administrator',\n      }],\n\n      types: [{\n        label: 'Componente',\n        value: 'A',\n      },\n      {\n        label: 'Setor',\n        value: 'B',\n      },\n      {\n        label: 'Equipamento',\n        value: 'C',\n      },\n      {\n        label: 'Tipo de Máquina',\n        value: 'D',\n      },\n      {\n        label: 'Equipamento Superior',\n        value: 'E',\n      }]\n    };\n\n    this.provider = new HandlerProvider(new UserProvider(), \"usuário\")\n    this.loadList();\n    this.loadDefaultValues();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n    this.getdisplayDate = this.getdisplayDate.bind(this);\n    this.generatePassword = this.generatePassword.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  loadDefaultValues() {\n    this.setState({\n      fields: {\n        password: undefined,\n        gender: 'male'\n      },\n      autocomplete: ''\n    })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n\n    this.loadDefaultValues();\n    this.loadList();\n  }\n\n\n  delete() {\n    let user = this.state.fields;\n    this.provider.delete(user.id, this.clean)\n  }\n\n  save() {\n    let user = this.state.fields;\n    if (user.birthDate) {\n      let arrayData = user.birthDate.split('/')\n      user.birthDate = `${arrayData[2]}-${arrayData[1]}-${arrayData[0]}`\n    }\n\n    if (user.password) String(user.password);\n    console.log(\"CreateUser -> save -> user\", user)\n\n    this.provider.save(user, this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n\n    this.setState({ fields })\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  autocompleteSelect(id, name) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    var displayBirthDate = this.getdisplayDate(item.birthDate);\n\n    let fields = {\n      id: item.id,\n      name: item.name,\n      role: item.role,\n      email: item.email,\n      birthDate: item.birthDate,\n      contact: item.contact,\n      gender: item.gender,\n      employeeBadge: item.employeeBadge,\n      forceChangePassword: item.forceChangePassword,\n      birthDate: displayBirthDate\n    }\n\n    this.setState({ fields })\n  }\n\n  getdisplayDate(date) {\n\n    var formatDate = date.split(\"-\");\n\n    var dt = new Date(formatDate);\n    var day = dt.getDate();\n    var month = dt.getMonth();\n    var year = dt.getFullYear();\n\n    return `${day}/${month + 1}/${year}`;\n  }\n\n  generatePassword() {\n    var fields = this.state.fields;\n\n    fields.password = Math.random().toString(36).slice(2)\n\n    return this.setState({ fields });\n  }\n\n\n  render() {\n    console.log(\"CreateUser -> render -> this.state.fields\", this.state.fields)\n\n    const genders = [\n      { label: 'Feminino', value: 'female' },\n      { label: 'Masculino', value: 'male' }\n    ]\n\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"60%\"\n        height=\"100%\"\n        dialogStyle={{ borderRadius: 5 }}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Usuários\"\n          style={{ borderRadius: 5 }}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <div className=\"md-grid\">\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_AutoComplete\n                  id=\"id\"\n                  name=\"id\"\n                  value={this.state.autocomplete}\n                  dataSelected={this.autocompleteSelect}\n                  list={this.state.list}\n                  onChange={this.onChange}\n                  type=\"search\"\n                  label=\"Buscar Usuário\"\n                  placeholder=\"Buscar Usuário\"\n                  style={{ width: \"100%\" }}\n                  rightIcon={\"search\"}\n                  description=\"name\"\n                />\n              </div>\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_TextField\n                  id=\"name\"\n                  name=\"name\"\n                  value={this.state.fields.name}\n                  onChange={this.onChange}\n                  label=\"Nome do Usuário\"\n                  placeholder=\"Nome do Usuário\"\n                />\n              </div>\n            </div>\n            <div className=\"md-grid\">\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_SelectField\n                  id=\"role\"\n                  name=\"role\"\n                  value={this.state.fields.role}\n                  onChange={this.onChange}\n                  label={\"Perfil de Usuário\"}\n                  labelElement=\"name\"\n                  valueElement=\"id\"\n                  list={this.state.role}\n                  required={false}\n                  style={{ width: \"100%\" }}\n                />\n              </div>\n              {this.state.fields.role == \"sector_leader\" ?\n                <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                  <C_TextField\n                    name=\"sector\"\n                    value={this.state.fields.sector}\n                    onChange={this.onChange}\n                    type=\"search\"\n                    label=\"Setor\"\n                    placeholder=\"Setor\"\n                    rightIcon={\"search\"}\n                    block paddedBlock\n                    required={true}\n                  />\n                </div>\n                : (this.state.fields.role == \"maintainer\" ?\n                  <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                    <C_TextField\n                      name=\"workCenter\"\n                      value={this.state.fields.workCenter}\n                      onChange={this.onChange}\n                      type=\"search\"\n                      label=\"Centro de Trabalho\"\n                      placeholder=\"Centro de Trabalho\"\n                      rightIcon={\"search\"}\n                      block paddedBlock\n                      required={true}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  : undefined)\n              }\n            </div>\n            <div className=\"md-grid\">\n              <div className=\"md-cell md-cell--3 md-cell--bottom\">\n                <C_Button\n                  style={{ width: 180 }}\n                  primary={true}\n                  label={<div style={{textAlign:\"center\"}}>Gerar senha</div>}\n                  icon={<FontIcon>lock</FontIcon>}\n                  action={() => this.generatePassword()}\n                />\n              </div>\n              <div className=\"md-cell md-cell--9 md-cell--bottom\">\n                <C_CheckBox\n                  name=\"forceChangePassword\"\n                  value={this.state.fields.forceChangePassword}\n                  onChange={this.onChange}\n                  label={<div style={{ fontSize: 15, color: \"#616161d9\" }}>Alterar Senha no Primeiro Acesso</div>}\n                  type=\"checkbox\"\n                  style={{ width: \"100%\", textAlign: \"center\" }}\n                  checked={this.state.fields.forceChangePassword}\n                />\n              </div>\n            </div>\n            <div className=\"md-grid\">\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_TextField\n                  name=\"email\"\n                  value={this.state.fields.email}\n                  onChange={this.onChange}\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  required={true}\n                />\n              </div>\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_TextField\n                  name=\"password\"\n                  value={this.state.fields.password}\n                  onChange={this.onChange}\n                  type=\"password\"\n                  label=\"Senha\"\n                  placeholder=\"Senha\"\n                />\n              </div>\n            </div>\n            <div className=\"md-grid\">\n              <div className=\"md-cell md-cell--6\">\n                <C_Calendar\n                  fullWidth={true}\n                  notInline={true}\n                  id=\"birthDate\"\n                  name=\"birthDate\"\n                  value={this.state.fields.birthDate}\n                  onChange={this.onChange}\n                  label={\"Data de Nascimento\"}\n                  cancelLabel={\"Cancelar\"}\n                />\n              </div>\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_TextField\n                  name=\"contact\"\n                  value={this.state.fields.contact}\n                  onChange={this.onChange}\n                  label=\"Telefone de Contato\"\n                  placeholder=\"Telefone de Contato\"\n                  fullWidth={true}\n                  onChange={this.onChange}\n                />\n              </div>\n            </div>\n            <div className=\"md-grid\">\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <fieldset style={{ borderRadius: 5, border: \"1px solid silver\", padding: 10}}>\n                  <legend style={{ width: \"auto\", border: \"none\", paddingRight: 5, paddingLeft: 5, marginLeft: 10, color: \"#666666a6\", fontSize: 16}}>Gênero</legend>\n                    <C_RadioGroup\n                      id=\"gender\"\n                      name=\"gender\"\n                      value={this.state.fields.gender}\n                      onChange={this.onChange}\n                      options={genders}\n                    />\n                </fieldset>\n              </div>\n              <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                <C_TextField\n                  name=\"employeeBadge\"\n                  value={this.state.fields.employeeBadge}\n                  onChange={this.onChange}\n                  label=\"Crachá do Usuário\"\n                  placeholder=\"Crachá do Usuário\"\n                />\n              </div>\n            </div>\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateUser;","import { CrudProvider } from \"./Crud\";\n\nexport class OrderLayoutProvider extends CrudProvider {\n\n constructor() {\n  super('order-layouts')\n }\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  DialogContainer,\n  Divider,\n  Toolbar,\n  FontIcon,\n} from 'react-md';\n\nimport C_TextField from '../components/TextField';\nimport C_SelectField from '../components/SelectField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport { HandlerProvider } from '../providers/handler';\nimport { OrderLayoutProvider } from '../providers/OrderLayout';\nimport C_AutoComplete from '../components/AutoComplete';\nimport { ObjectHelper } from '../helpers/Object';\nclass CreateOrderLayout extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      fields: {},\n      layouts: [{\n        label: 'Corretiva / Preventiva',\n        value: 'default',\n      },\n      {\n        label: 'Rota',\n        value: 'route',\n      },\n      {\n        label: 'Lista',\n        value: 'list',\n      }],\n      autocomplete: \"\",\n      list: []\n    };\n\n    this.provider = new HandlerProvider(new OrderLayoutProvider(), \"tipo de ordem de manutenção\")\n    this.loadList();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.autocompleteSelect = this.autocompleteSelect.bind(this);\n  }\n\n  async loadList() {\n    let list = []\n    let response = await this.provider.getList();\n    if (response.success) {\n      list = response.data\n    }\n    this.setState({ list })\n  }\n\n  autocompleteSelect(id) {\n\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    let item = this.state.list.find(element => element.id === id)\n\n    let fields = {\n      id: item.id,\n      orderLayoutType: item.orderLayout,\n      classification: item.classification,\n      type: item.type\n    }\n\n    this.setState({ fields })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n\n    ObjectHelper.clearFields(fields);\n\n    this.loadList()\n    this.setState({ fields, autocomplete: \"\" });\n  }\n\n  delete() {\n    let orderLayout = this.state.fields;\n    this.provider.delete(orderLayout.id, this.clean)\n  }\n\n  save() {\n    let orderLayout = this.state.fields;\n    this.provider.save(orderLayout, this.clean)\n  }\n\n  onChange(e, name) {\n\n    if (name === \"id\") {\n      this.setState({ autocomplete: e })\n      return\n    }\n\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    // const { visible } = this.state;\n    return (\n      <DialogContainer\n        id=\"simple-full-page-dialog\"\n        visible={this.state.visible}\n        width=\"40%\"\n        height=\"75%\"\n        dialogStyle={{borderRadius:5}}\n        aria-labelledby=\"simple-full-page-dialog-title\"\n      >\n        <Toolbar\n          fixed\n          colored\n          title=\"Cadastrar Layout de Ordem de Manutenção\"\n          style={{borderRadius:5}}\n          actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n        />\n        <section className=\"md-toolbar-relative\">\n          <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n            <C_AutoComplete\n              id=\"id\"\n              name=\"id\"\n              description=\"classification\"\n              value={this.state.autocomplete}\n              label=\"Buscar Layout\"\n              placeholder=\"Buscar Layout\"\n              rightIcon=\"search\"\n              block paddedBlock\n              list={this.state.list}\n              dataSelected={this.autocompleteSelect}\n              onChange={this.onChange}\n            /><br></br>\n            <C_SelectField\n              id=\"orderLayout\"\n              name=\"orderLayout\"\n              value={this.state.fields.orderLayoutType}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Layout da Ordem\"\n              list={this.state.layouts}\n              required={true}\n              style={{ width: \"100%\" }}\n            /><br></br>\n            <C_TextField\n              id=\"type\"\n              name=\"type\"\n              value={this.state.fields.type}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Tipo\"\n              placeholder=\"Tipo\"\n            /><br></br>\n            <C_TextField\n              id=\"classification\"\n              name=\"classification\"\n              value={this.state.fields.classification}\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Classificação\"\n              placeholder=\"Classificação\"\n            />\n          </form>\n        </section>\n        <C_CrudButtons\n          onSave={this.save}\n          onClean={this.clean}\n          onDelete={this.delete}\n          crudLevel={!!this.state.fields.id}\n        />\n      </DialogContainer>\n    );\n  }\n}\n\nexport default CreateOrderLayout;","import React, { PureComponent } from 'react';\nimport Button from 'react-md/lib/Buttons/Button';\nimport { TabsContainer, Tabs, Tab } from 'react-md'\nimport '../index.css';\n// import './Button.css';\n\nexport class C_Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabs: this.props.tabs\n    }\n  }\n\n  render() {\n\n    const labelTabStyle = {\n      fontSize:16, \n      fontStyle:\"oblique\",\n      textTransform: \"capitalize\"\n    }\n    let tabs = this.state.tabs\n    return (\n      <TabsContainer className=\"md-cell md-cell--12 md-cell--bottom\" >\n          <Tabs >\n            {tabs.map((tab, i) => (\n              <Tab style={{ color: \"black\" }} onClick={() => this.props.onClick(tab.value)} label={<p style={labelTabStyle}>{tab.name}</p>}>\n                {this.props.children}\n              </Tab>\n            ))\n            }\n          </Tabs>\n      </TabsContainer>\n    );\n  }\n}","import React, { PureComponent } from 'react';\nimport { Card } from 'react-md';\nimport '../index.css';\nimport { C_Icon } from '../components/Icon';\n// import './Button.css';\n\nexport class C_Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <Card className={this.props.className} style={this.props.style}>\n        <div>\n          <div style={{ position: \"relative\" }}>\n            <div>\n              <C_Icon\n                style={{ cursor: \"pointer\", position: \"absolute\", right: 0 }}\n                icon=\"close\" iconSize={25}\n                action={() => this.props.onClose()}\n              />\n            </div>\n            <div>\n              <span style={{ fontSize: this.props.titleSize ? this.props.titleSize : 24, fontWeight: \"bold\" }}>\n                {this.props.title}\n              </span>\n            </div>\n          </div>\n          {this.props.children}\n        </div>\n      </Card>\n    );\n  }\n}\n\n","import React, { PureComponent } from 'react';\nimport { DialogContainer, Toolbar, FontIcon, Card } from 'react-md';\nimport C_TextField from '../components/TextField';\nimport C_CrudButtons from '../components/CrudButtons';\nimport C_SelectField from '../components/SelectField';\nimport { HandlerProvider } from '../providers/handler';\nimport { ObjectHelper } from '../helpers/Object';\nimport { MaintenanceOrderHelper as HelperOM } from '../helpers/MaintenanceOrder';\nimport C_AutoComplete from '../components/AutoComplete';\nimport { CauseProvider } from '../providers/Cause';\nimport { DiagnosticProvider } from '../providers/Diagnostic';\nimport { MaintenanceOrderProvider } from '../providers/MaintenanceOrder';\nimport { InstallationAreaProvider } from '../providers/InstallationArea';\nimport { SuperiorMachineProvider } from '../providers/SuperiorMachine';\nimport { MachineProvider } from '../providers/Machine';\nimport { OrderLayoutProvider } from '../providers/OrderLayout';\nimport { WorkCenterProvider } from '../providers/WorkCenter';\nimport { UserProvider } from '../providers/User';\nimport { C_Tabs } from '../components/Tabs';\nimport { MessageModal } from '../components/Message';\nimport { C_Table } from '../components/Table';\nimport { C_Button } from '../components/Button'\nimport { StringHelper } from '../helpers/String';\nimport { C_Modal } from './Modal';\nimport C_RadioGroup from '../components/RadioGroup';\n\nexport default class CreateMaintenanceOrder extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      backgroundModal: StringHelper.backgroundModal(),\n      styleMessage: StringHelper.styleMessage(),\n      visible: true,\n      completeOrder: '', completeWorkcenter: '',\n      orderEquipments: [], listWorkcenter: [], listOrders: [],\n      fields: {},\n      priority: [\n        { label: 'Urgente', value: 'urgent' },\n        { label: 'Alta', value: 'high' },\n        { label: 'Média', value: 'medium' },\n        { label: 'Baixa', value: 'low' },\n\n      ],\n      columns: [\n        { name: \"Equipamento\", property: \"equipment.description\" },\n        { name: \"Tipo Máquina\", property: \"equipment.machineType.description\" },\n        { name: \"Local Inst.\", property: \"installationArea.description\" },\n        { name: \"Setor.\", property: \"installationArea.sector.description\" },\n        { name: \"Excluir\", icon: \"delete\", action: (index) => this.removeEquipment(index) },\n      ],\n\n      tabs: [\n        { name: \"Dados Gerais\", value: \"info_main\" },\n        { name: \"Equipamentos\", value: \"equipments\" },\n        { name: \"Operações\", value: \"operations\" },\n      ]\n    };\n\n    this.provider = new HandlerProvider(new MaintenanceOrderProvider(), \"ordem de manutenção\")\n    this.providerLayout = new HandlerProvider(new OrderLayoutProvider(), \"layout da ordem\")\n    this.providerUser = new HandlerProvider(new UserProvider(), \"usuário\")\n    this.providerWorkcenter = new HandlerProvider(new WorkCenterProvider(), \"centro de trabalho\")\n\n    this.loadingData();\n\n    this.hideModal = this.hideModal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.save = this.save.bind(this);\n    this.clean = this.clean.bind(this);\n    this.delete = this.delete.bind(this);\n    this.completeField = this.completeField.bind(this);\n    this.getOrder = this.getOrder.bind(this);\n\n  }\n\n  async loadingData() {\n    let listWorkcenter = [];\n    let listUsers = []\n    let layouts = []\n    let listOrders = []\n\n    let res = await this.providerWorkcenter.getList();\n    if (res.success) listWorkcenter = res.data\n\n    let res2 = await this.providerUser.getList();\n    if (res2.success) listUsers = res2.data\n\n    let res3 = await this.providerLayout.getList();\n    if (res3.success) layouts = res3.data\n\n    let res4 = await this.provider.getList();\n    if (res4.success) listOrders = res4.data\n\n    this.setState({ listWorkcenter, listUsers, layouts, listOrders })\n  }\n\n  hideModal() {\n    this.setState({ visible: false })\n    this.props.onClose()\n  }\n\n  clean() {\n    var fields = this.state.fields;\n\n    ObjectHelper.clearFields(fields);\n    this.setState({\n      fields,\n      order: {}, orderEquipments: [],\n      completeEquipment: \"\", completeOrder: \"\", completeWorkcenter: \"\"\n    }, () => this.loadingData());\n  }\n\n  removeEquipment(index) {\n    // console.log(\"CreateMaintenanceOrder -> removeEquipment -> index\", index)\n    let { orderEquipments } = this.state\n    orderEquipments.splice(index, 1)\n\n    this.setState({ orderEquipments })\n  }\n\n  delete() {\n    let order = this.state.fields;\n    this.provider.delete(order.id, this.clean)\n  }\n\n  checkData(params) {\n    const { installationArea, orderEquipments, workCenter, fields } = this.state\n    const errors = [];\n\n    if (params) {\n      console.log(\"CreateMaintenanceOrder -> checkData -> params\", params)\n      if (!params.equipment) errors.push(\"Equipamento\");\n      if (params.equipment && !params.installationArea) errors.push(\"Local de Instalação\");\n    }\n    else {\n      if (!fields.orderNumber) errors.push(\"Número da Ordem\");\n      if (!fields.orderLayout) errors.push(\"Layout da Ordem\");\n      if (!fields.priority) errors.push(\"Prioridade da Ordem\");\n      if (!fields.solicitationUser) errors.push(\"Solicitante da Ordem\");\n      if (!workCenter) errors.push(\"Centro de Trabalho\");\n    }\n\n    return errors;\n  }\n\n  save() {\n\n    const errors = this.checkData();\n\n    if (errors.length > 0) {\n      MessageModal.informationList(\"Erro\", \"Informe os campos obrigatórios\", errors, null)\n\n      return\n    }\n\n    let fields = this.state.fields;\n\n    let orderEquipments = this.state.orderEquipments;\n\n    let order = {\n      id: fields.id,\n      orderNumber: fields.orderNumber,\n      orderEquipment: orderEquipments,\n      workCenter: this.state.workCenter,\n      orderLayout: {\n        id: fields.orderLayout,\n        type: fields.orderType,\n        classification: fields.orderClassification\n      },\n      solicitationUser: {\n        id: fields.solicitationUser\n      },\n      priority: fields.priority,\n      description: fields.description,\n      openedDate: new Date(),\n    }\n    this.provider.save(order, this.clean)\n  }\n\n\n  onChange(e, name) {\n    console.log(\"CreateMaintenanceOrder -> onChange -> e\", e)\n    console.log(\"CreateMaintenanceOrder -> onChange -> name\", name)\n\n    if (name === \"id\") this.setState({ completeOrder: e })\n    else if (name === \"workCenter\") this.setState({ completeWorkcenter: e })\n    else if (e.target.name === \"orderLayout\") {\n\n      const layout = this.getOrderLayout(e.target.value)\n      let layoutType = layout.orderLayout;\n\n      let fields = {\n        ...this.state.fields,\n        orderLayout: layout.id,\n        orderClassification: layout.classification,\n        orderType: layout.type\n      }\n\n      this.setState({ fields, layoutType })\n    }\n    else {\n      console.log(\"Entrou\");\n\n      let fields = this.state.fields;\n\n      fields[e.target.name] = e.target.value;\n      this.setState({ fields })\n    }\n  }\n\n  async getOrder(id) {\n\n    let order = {};\n    let response = await this.provider.get(id);\n\n    if (response.success) {\n      order = response.data\n      // console.log(\"CreateMaintenanceOrder -> getOrder -> order\", order)\n    }\n\n    let fields = {\n      id: order.id,\n      orderNumber: order.orderNumber,\n      priority: order.priority,\n      machine: order && order.orderEquipment[0] ? order.orderEquipment[0].equipment.description : \"\",\n      superiorMachine: order && order.orderEquipment[0] && order.orderEquipment[0].superiorEquipment ? order.orderEquipment[0].superiorEquipment.description : \"\",\n      orderLayout: order.orderLayout.id,\n      orderType: order.orderLayout.type,\n      orderClassification: order.orderLayout.classification,\n      description: order.description,\n      solicitationUser: order.solicitationUser ? order.solicitationUser.id : undefined,\n      workCenter: order.workCenter ? order.workCenter.description : \"\",\n    }\n\n    let layoutType = order.orderLayout.orderLayout;\n\n    this.setState({\n      fields, orderEquipments: order.orderEquipment,\n      completeWorkcenter: fields.workCenter,\n      layoutType\n    })\n  }\n\n  completeField(id, name) {\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    if (name == \"workCenter\") {\n      let workCenter = this.state.listWorkcenter.find(element => element.id === id)\n      this.setState({ workCenter })\n    }\n\n    if (name == \"id\") {\n      let item = this.state.listOrders.find(element => element.id === id)\n      this.getOrder(item.id)\n    }\n  }\n\n  formPreventDefault(event) {\n    event.preventDefault()\n  }\n\n  getOrderLayout(id) {\n    const { layouts } = this.state\n    const index = layouts.findIndex(layout => id === layout.id)\n\n    if (index == -1) return {};\n\n    return layouts[index];\n  }\n\n  render() {\n\n    console.log(\"render -> STATE\", this.state)\n    var {addEquiment, showSuccess, layoutType, layouts, fields, orderEquipments, tabs } = this.state;\n\n    return (\n      <div>\n\n        <DialogContainer\n          id=\"simple-full-page-dialog\"\n          visible={this.state.visible}\n          width=\"60%\"\n          height=\"100%\"\n          dialogStyle={{ borderRadius: 5 }}\n          aria-labelledby=\"simple-full-page-dialog-title\"\n        >\n          <Toolbar\n            fixed\n            colored\n            title=\"Cadastrar Ordem de Manutenção\"\n            style={{ borderRadius: 5 }}\n            actions={<FontIcon style={{ cursor: \"pointer\" }} onClick={() => this.hideModal()}>close</FontIcon>}\n          />\n          <section style={{ position: \"relative\" }} className=\"md-toolbar-relative\">\n            {layoutType ?\n              <div className=\"slideInLeft\">\n                <span style={{ fontWeight: \"bold\", fontStyle: \"italic\", padding: \"2px 12px\", minWidth: 100, borderRadius: 10, top: 35, right: 0, position: \"absolute\", textAlign: \"center\", fontSize: 15, fontFamily: \"sans-serif\", backgroundColor: \"#424242\", color: \"white\" }}>\n                  {HelperOM.translate(\"layout\", this.state.layoutType)}\n                </span>\n              </div>\n              : undefined}\n            <C_Tabs tabs={tabs} onClick={(selectedTab) => this.setState({ selectedTab })}>\n              <form ref={(el) => this.form = el} onSubmit={this.formPreventDefault}>\n                {!this.state.selectedTab || this.state.selectedTab == \"info_main\" ?\n                  <div>\n                    <div className=\"md-grid\">\n                      <div className=\"md-cell md-cell--12 md-cell--bottom\">\n                        <C_AutoComplete\n                          id=\"id\"\n                          name=\"id\"\n                          description=\"orderNumber\"\n                          onChange={this.onChange}\n                          type=\"search\"\n                          list={this.state.listOrders}\n                          label=\"Buscar Ordem de Manutenção\"\n                          placeholder=\"Buscar Ordem de Manutenção\"\n                          rightIcon={\"search\"}\n                          value={this.state.completeOrder}\n                          dataSelected={this.completeField}\n                          required={true}\n                        />\n                      </div>\n                      <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                        <C_TextField\n                          id=\"orderNumber\"\n                          name=\"orderNumber\"\n                          value={fields.orderNumber}\n                          onChange={this.onChange}\n                          type=\"search\"\n                          label=\"Número da Ordem\"\n                          placeholder=\"Número da Ordem\"\n                          required={true}\n                        />\n                      </div>\n                      <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                        <C_SelectField\n                          name=\"orderLayout\"\n                          id=\"orderLayout\"\n                          value={fields.orderLayout}\n                          onChange={this.onChange}\n                          labelElement=\"classification\"\n                          valueElement=\"id\"\n                          label={\"Layout da Ordem\"}\n                          placeholder={\"Selecione\"}\n                          list={layouts}\n                          required={true}\n                          style={{ width: \"100%\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"md-grid\">\n                      <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                        <C_TextField\n                          id=\"orderType\"\n                          name=\"orderType\"\n                          onChange={this.onChange}\n                          type=\"text\"\n                          label=\"Tipo da Ordem de Manutenção\"\n                          placeholder=\"Tipo da Ordem de Manutenção\"\n                          value={fields.orderType}\n                          disabled={true}\n                        />\n                      </div>\n                      <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                        <C_TextField\n                          id=\"orderClassification\"\n                          name=\"orderClassification\"\n                          onChange={this.onChange}\n                          type=\"text\"\n                          label=\"Classificação da Ordem\"\n                          placeholder=\"Classificação da Ordem\"\n                          value={fields.orderClassification}\n                          disabled={true}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"md-grid\">\n                      <div className=\"md-cell md-cell--12 md-cell--bottom\">\n                        <C_AutoComplete\n                          id=\"workCenter\"\n                          name=\"workCenter\"\n                          onChange={this.onChange}\n                          type=\"search\"\n                          list={this.state.listWorkcenter}\n                          label=\"Centro de Trabalho\"\n                          placeholder=\"Centro de Trabalho\"\n                          rightIcon={\"search\"}\n                          value={this.state.completeWorkcenter}\n                          dataSelected={this.completeField}\n                          required={true}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"md-grid\">\n                      <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                        <C_SelectField\n                          id=\"priority\"\n                          name=\"priority\"\n                          value={fields.priority}\n                          onChange={this.onChange}\n                          type=\"text\"\n                          label={\"Prioridade\"}\n                          placeholder={\"Selecione\"}\n                          list={this.state.priority}\n                          required={true}\n                          style={{ width: \"100%\" }}\n                        />\n                      </div>\n                      <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                        <C_SelectField\n                          name=\"solicitationUser\"\n                          id=\"solicitationUser\"\n                          value={fields.solicitationUser}\n                          onChange={this.onChange}\n                          type=\"text\"\n                          labelElement=\"name\"\n                          valueElement=\"id\"\n                          label={\"Solicitante\"}\n                          placeholder={\"Selecione\"}\n                          list={this.state.listUsers}\n                          required={true}\n                          style={{ width: \"100%\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"md-grid\">\n                      <div className=\"md-cell md-cell--12 md-cell--bottom\">\n                        <C_TextField\n                          id=\"description\"\n                          name=\"description\"\n                          value={fields.description}\n                          onChange={this.onChange}\n                          type=\"text\"\n                          label=\"Descrição do Problema\"\n                          placeholder=\"Descrição do Problema\"\n                          required={false}\n                          rows={3}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  : undefined}\n\n                {this.state.selectedTab == \"equipments\" ?\n                  <div className=\"md-grid\">\n                    <div className=\"md-cell md-cell--6 md-cell--bottom\">\n                      <C_Button\n                        secondary={true}\n                        label=\"Adicionar Equipamentos\"\n                        action={() => {\n                          this.setState({ addEquiment: true })\n                        }}\n                      />\n                    </div>\n                    <div className=\"md-cell md-cell--12 md-cell--bottom\">\n                      <C_Table\n                        titleSize={16}\n                        fontSize={14}\n                        columns={this.state.columns}\n                        showPagination={true}\n                        rowsPerPage={5}\n                        content={orderEquipments}\n                        onClick={() => { return }}\n                        textAlign=\"center\"\n                      />\n                    </div>\n                  </div>\n                  : undefined}\n              </form>\n            </C_Tabs>\n          </section>\n          <C_CrudButtons\n            onSave={this.save}\n            onClean={this.clean}\n            onDelete={this.delete}\n            crudLevel={!!fields.id}\n          />\n\n          {addEquiment ?\n            <div style={this.state.backgroundModal}>\n              <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", position: \"fixed\", top: \"15%\", right: 0 }}>\n                <AddEquipments\n                  pushEquipment={(equipment, showMessage) => {\n                    var showSuccess = showMessage\n                    console.log(\"CreateMaintenanceOrder -> render -> showMessage\", showMessage)\n                    console.log(\"CreateMaintenanceOrder -> render -> equipment\", equipment)\n                    if (!equipment) return\n\n                    const errors = this.checkData(equipment);\n\n                    if (errors.length > 0) {\n                      MessageModal.informationList(\"Erro\", \"Informe os campos obrigatórios\", errors, null)\n                      return\n                    }\n\n                    let orderEquipments = this.state.orderEquipments\n                    console.log(\"CreateMaintenanceOrder -> render -> orderEquipments\", orderEquipments)\n\n                    orderEquipments.push(equipment);\n\n                    this.setState({ orderEquipments, showSuccess })\n                  }}\n                  \n\n                  checkData={() => this.checkData()}\n                  onClose={() => this.setState({ addEquiment: false })}\n                />\n              </div>\n            </div>\n          : undefined}\n\n          {showSuccess ?\n            <div className=\"slideInLeft\" style={this.state.styleMessage}>\n              {\"Equipamento adicionado com sucesso!\"}\n            </div>\n          : undefined}\n        </DialogContainer>\n      </div>\n    );\n  }\n}\nexport class AddEquipments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      layoutType: this.props.layoutType,\n      orderEquipment: {\n        needStopping: false,\n        isStopped: false\n      },\n      completeSymptom: '',\n      completeCause: '',\n      completeEquipment: '',\n      completeSuperiorEquipment: '',\n      completeArea: ''\n    }\n\n    this.providerEquipment = new HandlerProvider(new MachineProvider(), \"equipamento\")\n    this.providerSuperiorEquipment = new HandlerProvider(new (SuperiorMachineProvider), \"equipamento superior\")\n    this.providerArea = new HandlerProvider(new (InstallationAreaProvider), \"área de instalação\")\n    this.providerCause = new HandlerProvider(new (CauseProvider), \"Causa do Defeito\")\n    this.providerSypmtom = new HandlerProvider(new (DiagnosticProvider), \"Sintoma do Defeito\")\n    this.completeField = this.completeField.bind(this);\n    this.getEquipment = this.getEquipment.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.clean = this.clean.bind(this);\n    this.loadingData();\n  }\n\n  async loadingData() {\n    let listEquipments = []\n    let listSuperiorEquipments = []\n    let listAreas = []\n    let listCauses = []\n    let listSymptoms = []\n\n    let res = await this.providerEquipment.getList();\n    if (res.success) listEquipments = res.data\n\n    let res2 = await this.providerSuperiorEquipment.getList();\n    if (res2.success) listSuperiorEquipments = res2.data\n\n    let res3 = await this.providerArea.getList();\n    if (res3.success) listAreas = res3.data\n\n    let res4 = await this.providerCause.getList();\n    if (res4.success) listCauses = res4.data\n\n    let res5 = await this.providerSypmtom.getList();\n    if (res5.success) listSymptoms = res5.data\n\n    this.setState({ listEquipments, listSuperiorEquipments, listAreas, listCauses, listSymptoms })\n  }\n\n  async getEquipment(id) {\n    let orderEquipment = this.state.orderEquipment;\n\n    let response = await this.providerEquipment.get(id);\n\n    if (response.success) orderEquipment.equipment = response.data\n\n    this.setState({ orderEquipment });\n  }\n\n\n  completeField(id, name) {\n    // console.log(\"AddEquipments -> completeField -> name\", name)\n\n    const { orderEquipment } = this.state\n    if (id === undefined) {\n      this.clean()\n      return\n    }\n\n    if (name == \"orderEquipmentId\") {\n      let equipment = this.state.listEquipments.find(element => element.id === id)\n      this.getEquipment(equipment.id)\n    }\n\n    if (name == \"superiorEquipment\") {\n      let superiorEquipment = this.state.listSuperiorEquipments.find(element => element.id === id)\n\n      orderEquipment.superiorEquipment = superiorEquipment;\n      this.setState({ orderEquipment })\n    }\n\n    if (name == \"installationArea\") {\n      let installationArea = this.state.listAreas.find(element => element.id === id)\n\n      orderEquipment.installationArea = installationArea;\n      this.setState({ orderEquipment })\n    }\n\n    if (name == \"defectOrigin\") {\n      let defectOrigin = this.state.listCauses.find(element => element.id === id)\n\n      orderEquipment.defectOrigin = defectOrigin;\n      this.setState({ orderEquipment })\n    }\n\n    if (name == \"defectSymptom\") {\n      let defectSymptom = this.state.listSymptoms.find(element => element.id === id)\n\n      orderEquipment.defectSymptom = defectSymptom;\n      this.setState({ orderEquipment })\n    }\n  }\n\n  clean() { }\n\n  onChange(e, name) {\n\n    if (name === \"orderEquipmentId\") this.setState({ completeEquipment: e })\n    else if (name === \"superiorEquipment\") this.setState({ completeSuperiorEquipment: e })\n    else if (name === \"installationArea\") this.setState({ completeArea: e })\n    else if (name === \"defectOrigin\") this.setState({ completeCause: e })\n    else if (name === \"defectSymptom\") this.setState({ completeSymptom: e })\n    else {\n      let orderEquipment = this.state.orderEquipment;\n\n      orderEquipment[e.target.name] = e.target.value;\n      this.setState({ orderEquipment })\n    }\n  }\n\n  render() {\n    const { orderEquipment, layoutType } = this.state\n    console.log(\"AddEquipments -> render -> this.state\", this.state)\n\n    return (\n      <C_Modal style={{ maxHeight: \"36vw\", overflowX: \"hidden\", width: \"90%\", padding: 20, borderRadius: 5 }} titleSize={20} title=\"EQUIPAMENTOS\" onClose={() => this.props.onClose()}>\n        <div className=\"md-grid\">\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_AutoComplete\n              id=\"superiorEquipment\"\n              name=\"superiorEquipment\"\n              onChange={this.onChange}\n              type=\"search\"\n              list={this.state.listSuperiorEquipments}\n              label=\"Equipamento Superior\"\n              placeholder=\"Equipamento Superior\"\n              rightIcon={\"search\"}\n              value={this.state.completeSuperiorEquipment}\n              dataSelected={this.completeField}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_AutoComplete\n              id=\"orderEquipmentId\"\n              name=\"orderEquipmentId\"\n              onChange={this.onChange}\n              type=\"search\"\n              list={this.state.listEquipments}\n              label=\"Equipamento\"\n              placeholder=\"Equipamento\"\n              rightIcon={\"search\"}\n              value={this.state.completeEquipment}\n              dataSelected={this.completeField}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_TextField\n              id=\"code\"\n              name=\"code\"\n              type=\"text\"\n              label=\"Código do Equipamento\"\n              placeholder=\"Código do Equipamento\"\n              value={orderEquipment.equipment ? orderEquipment.equipment.code : undefined}\n              disabled={true}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_TextField\n              id=\"machineType\"\n              name=\"machineType\"\n              type=\"text\"\n              label=\"Tipo de Máquina\"\n              placeholder=\"Tipo de Máquina\"\n              value={orderEquipment.equipment ? orderEquipment.equipment.machineType.description : undefined}\n              disabled={true}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_AutoComplete\n              id=\"installationArea\"\n              name=\"installationArea\"\n              onChange={this.onChange}\n              type=\"search\"\n              list={this.state.listAreas}\n              label=\"Local de Instalação\"\n              placeholder=\"Local de Instalação\"\n              rightIcon={\"search\"}\n              value={this.state.completeArea}\n              dataSelected={this.completeField}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_TextField\n              id=\"sector\"\n              name=\"sector\"\n              type=\"text\"\n              label=\"Setor\"\n              placeholder=\"Setor\"\n              value={orderEquipment.installationArea ? orderEquipment.installationArea.sector.description : undefined}\n              disabled={true}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_AutoComplete\n              id=\"defectOrigin\"\n              name=\"defectOrigin\"\n              onChange={this.onChange}\n              type=\"search\"\n              list={this.state.listCauses}\n              label=\"Causa do Defeito\"\n              placeholder=\"Causa do Defeito\"\n              rightIcon={\"search\"}\n              value={this.state.completeCause}\n              dataSelected={this.completeField}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_TextField\n              id=\"defectOriginNote\"\n              name=\"defectOriginNote\"\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Obs. Causa do Defeito\"\n              placeholder=\"Obs. Causa do Defeito\"\n              value={orderEquipment.defectOriginNote}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_AutoComplete\n              id=\"defectSymptom\"\n              name=\"defectSymptom\"\n              onChange={this.onChange}\n              type=\"search\"\n              list={this.state.listSymptoms}\n              label=\"Sintoma do Defeito\"\n              placeholder=\"Sintoma do Defeito\"\n              rightIcon={\"search\"}\n              value={this.state.completeSymptom}\n              dataSelected={this.completeField}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <C_TextField\n              id=\"defectSymptomNote\"\n              name=\"defectSymptomNote\"\n              onChange={this.onChange}\n              type=\"text\"\n              label=\"Obs. Sintoma do Defeito\"\n              placeholder=\"Obs. Sintoma do Defeito\"\n              value={orderEquipment.defectSymptomNote}\n            />\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <fieldset style={{ borderRadius: 5, border: \"1px solid silver\", padding: 10 }}>\n              <legend style={{ width: \"auto\", border: \"none\", paddingRight: 5, paddingLeft: 5, color: \"#666666\", fontSize: 13 }}>Requer Parada?</legend>\n              <C_RadioGroup\n                id=\"needStopping\"\n                name=\"needStopping\"\n                value={orderEquipment.needStopping}\n                onChange={(e) => {\n                  var orderEquipment = this.state.orderEquipment;\n                  orderEquipment[e.target.name] = e.target.value == \"true\" ? true : false;\n\n                  this.setState({orderEquipment})\n                }}\n                options={[{ label: \"Sim\", value: true }, { label: 'Não', value: false }]}\n              />\n            </fieldset>\n          </div>\n          <div className=\"md-cell md-cell--6 md-cell--bottom\">\n            <fieldset style={{ borderRadius: 5, border: \"1px solid silver\", padding: 10 }}>\n              <legend style={{ width: \"auto\", border: \"none\", paddingRight: 5, paddingLeft: 5, color: \"#666666\", fontSize: 13 }}>Está parado?</legend>\n              <C_RadioGroup\n                id=\"isStopped\"\n                name=\"isStopped\"\n                value={orderEquipment.isStopped}\n                onChange={(e) => {\n                  var orderEquipment = this.state.orderEquipment;\n                  orderEquipment[e.target.name] = e.target.value == \"true\" ? true : false;\n\n                  this.setState({ orderEquipment })\n                }}\n                options={[{ label: \"Sim\", value: true }, { label: 'Não', value: false }]}\n              />\n            </fieldset>\n          </div>\n          <div className=\"md-cell md-cell--12 md-cell--bottom\" style={{ marginTop: 30 }}>\n            <C_Button className=\"md-cell md-cell--6 md-cell--bottom\" label=\"FECHAR\"\n              secondary={true}  action={() => this.props.onClose()}\n            />\n            <C_Button className=\"md-cell md-cell--6 md-cell--bottom\" primary={true}\n              label=\"ADICIONAR\" action={() => this.props.pushEquipment(orderEquipment, true)}\n            />\n          </div>\n        </div>\n      </C_Modal>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport C_Card from './components/Card';\nimport { FontIcon, Subheader, Divider } from 'react-md';\nimport './index.css';\nimport CreateMachineType from './crud/MachineType';\nimport CreateMachineComponents from './crud/MachineComponents';\nimport CreateSector from './crud/Sector';\nimport CreateInstallationArea from './crud/InstallationArea';\nimport CreateUnitMeasurement from './crud/UnitMeasurement';\nimport CreateParts from './crud/Parts';\nimport CreateDefaultNote from './crud/Note';\nimport CreateDefaultOperation from './crud/Operation';\nimport CreateOrderType from './crud/OrderType';\nimport CreateDefectCause from './crud/Cause';\nimport CreateDefectDiagnostic from './crud/Diagnostic';\nimport CreateClassification from './crud/Classification';\nimport CreateMachine from './crud/Machine';\nimport CreateSuperiorMachine from './crud/SuperiorMachine';\nimport CreateWorkCenter from './crud/WorkCenter';\nimport CreateSafetyParameter from './crud/SafetyParameter';\nimport CreateUser from './crud/User';\nimport CreateOrderLayout from './crud/OrderLayout'\nimport CreateMaintenanceOrder from './crud/MaintenanceOrder';\n\n// import './Login.css';\n\nclass ShowCards extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.unmountModal = this.unmountModal.bind(this);\n  }\n\n  renderComponent(component) {\n\n    if (component === \"work center\") {\n      return ReactDOM.render(<CreateWorkCenter onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"sector\") {\n      return ReactDOM.render(<CreateSector onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if(component === \"user\") {\n      ReactDOM.render(<CreateUser onClose={this.unmountModal}/>, this.getDOMToRender())\n    \n    } else if (component === \"installation area\") {\n      return ReactDOM.render(<CreateInstallationArea onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"safety parameter\") {\n      return ReactDOM.render(<CreateSafetyParameter onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"machine type\") {\n      return ReactDOM.render(<CreateMachineType onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"unit measurement\") {\n      return ReactDOM.render(<CreateUnitMeasurement onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"machine components\") {\n      return ReactDOM.render(<CreateMachineComponents onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"parts\") {\n      return ReactDOM.render(<CreateParts onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"machine\") {\n      return ReactDOM.render(<CreateMachine onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"superior machine\") {\n      return ReactDOM.render(<CreateSuperiorMachine onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    // } else if (component === \"classification\") {\n    //   return ReactDOM.render(<CreateClassification onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    // } \n    } else if (component === \"defect cause\") {\n      return ReactDOM.render(<CreateDefectCause onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"defect diagnostic\") {\n      return ReactDOM.render(<CreateDefectDiagnostic onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    // } else if (component === \"order type\") {\n    //   return ReactDOM.render(<CreateOrderType onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"default note\") {\n      return ReactDOM.render(<CreateDefaultNote onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"default operation\") {\n      return ReactDOM.render(<CreateDefaultOperation onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"order layout\") {\n      return ReactDOM.render(<CreateOrderLayout onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else if (component === \"maintenance order\") {\n\n      return ReactDOM.render(<CreateMaintenanceOrder onClose={this.unmountModal}/>, this.getDOMToRender())\n\n    } else {\n      // console.log(\"TCL: ShowCards -> renderComponent -> else -> component\", component)\n      this.unmountModal()\n    }\n    \n  }\n\n  unmountModal() {\n    ReactDOM.unmountComponentAtNode(this.getDOMToRender());\n  }\n\n  getDOMToRender() {\n    return document.getElementById('cardList')\n  }\n\n  render() {\n\n    return (\n      <div style={{paddingBottom: 20}}>\n        <span id=\"cardList\"></span>\n        <div style={{ marginTop: \"2%\", width: \"50%\" }}>\n          <h2 style={{ color: \"#A40003\", fontWeight: \"bold\", textAlign: \"left\", marginLeft:\"5%\"}}>GERAL</h2>\n          <hr />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Centro de Trabalho\"}\n            onClick={() => this.renderComponent(\"work center\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Setor\"}\n            onClick={() => this.renderComponent(\"sector\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Usuários\"}\n            onClick={() => this.renderComponent(\"user\")}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Local de Instalação\"}\n            onClick={() => this.renderComponent(\"installation area\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Parametrização Segurança\"}\n            onClick={() => this.renderComponent(\"safety parameter\")}\n          />\n          <div style={{ marginLeft: 20, marginTop: \"3%\", width: \"20%\" }}></div>\n        </div>\n        <div style={{ marginTop: \"4%\", width: \"50%\" }}>\n          <h2 style={{ color: \"#A40003\", fontWeight: \"bold\", textAlign: \"left\", marginLeft:\"5%\"}}>EQUIPAMENTO</h2>\n          <hr />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Tipo de Máquina\"}\n            onClick={() => this.renderComponent(\"machine type\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Unidade de Medida\"}\n            onClick={() => this.renderComponent(\"unit measurement\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Componente de Máquina\"}\n            onClick={() => this.renderComponent(\"machine components\")}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            avatarStyle={{ backgroundColor: \"\" }}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Peças\"}\n            onClick={() => this.renderComponent(\"parts\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            avatarStyle={{ backgroundColor: \"\" }}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Equipamento\"}\n            onClick={() => this.renderComponent(\"machine\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            avatarStyle={{ backgroundColor: \"\" }}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Equipamento Superior\"}\n            onClick={() => this.renderComponent(\"superior machine\")}\n          />\n        </div>\n        <div style={{ marginTop: \"4%\", width: \"50%\" }}>\n          <h2 style={{ color: \"#A40003\", fontWeight: \"bold\", textAlign: \"left\", marginLeft:\"5%\"}}>ORDEM DE MANUTENÇÃO</h2>\n          <hr />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Layout de Ordem de Manutenção\"}\n            onClick={() => this.renderComponent(\"order layout\")}\n          />\n          {/* <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Classificação da Ordem\"}\n            onClick={() => this.renderComponent(\"classification\")}\n          /> */}\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Causa do Defeito\"}\n            onClick={() => this.renderComponent(\"defect cause\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Sintoma do Defeito\"}\n            onClick={() => this.renderComponent(\"defect diagnostic\")}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            avatarStyle={{ backgroundColor: \"\" }}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Observação Padrão\"}\n            onClick={() => this.renderComponent(\"default note\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            avatarStyle={{ backgroundColor: \"\" }}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Operação Padrão\"}\n            onClick={() => this.renderComponent(\"default operation\")}\n          />\n          <C_Card\n            icon={<FontIcon>open_in_new</FontIcon>}\n            style={{ marginLeft: 20, backgroundColor: \"#79777745\", marginTop: \"3%\", width: \"20%\", borderRadius: 10, cursor: \"pointer\" }}\n            title={<div style={{ fontWeight: \"bold\" }}>CADASTRO</div>}\n            className={\"effectfront\"}\n            subtitle={\"Ordem de Manutenção\"}\n            onClick={() => this.renderComponent(\"maintenance order\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowCards;","import React, { Component } from 'react';\n\nclass Logout extends Component {\n  constructor(props) {\n    super(props);\n    this.props.logout();\n  }\n\n  render() {\n    return (<br></br>);\n  }\n\n}\nexport default Logout;","import React, { Component } from 'react';\nimport { FontIcon } from 'react-md';\nimport '../index.css';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport styled from 'styled-components';\nimport Dashboard from '../Dashboard'\nimport ShowCards from '../ShowCards'\nimport Logout from '../login/Logout'\n\nconst Main = styled.main`\n  position: relative;\n  overflow: hidden;\n  transition: all .15s;\n  margin-left: ${props => (props.expanded ? 240 : 64)}px;\n`;\nclass C_Menu extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      selected: 'create',\n      expanded: false\n    };\n\n    this.onSelect = this.onSelect.bind(this);\n    this.onToggle = this.onToggle.bind(this);\n\n  }\n  \n  onSelect = (selected) => {\n    this.setState({ selected: selected });\n  };\n\n  onToggle = (expanded) => {\n    this.setState({ expanded: expanded });\n  };\n\n  renderSelectedItem() {\n    const { selected } = this.state;\n\n    if (selected == 'home') {\n      return (<Dashboard/>)\n    } else if(selected == 'create') {\n      return (<ShowCards/>)\n    } else if(selected == 'logout') {\n      return (<Logout logout={this.props.onLogout} />)\n    } else {\n      return(<p>Item {selected} not found 🤔</p>)\n    }\n\n  }\n  render() {\n\n    const { expanded, selected } = this.state;\n\n    let menuItens = [\n      {\n        name: 'Monitor',\n        icon: 'dvr',\n        key: 'home'\n      },\n      {\n        name: 'Cadastros',\n        icon: 'edit',\n        key: 'create'\n      },\n      {\n        name: 'Relatórios',\n        icon: 'description',\n        key: 'reports'\n      },\n      {\n        name: 'Configurações',\n        icon: 'settings_applications',\n        key: 'config'\n      },\n      {\n        name: 'Notificações',\n        icon: 'notifications',\n        key: 'notification',\n      },\n      {\n        name: 'Sair',\n        icon: 'reply',\n        key: 'logout'\n      }\n    ]\n\n    let menu = menuItens.map((menuItem, key) =>\n      <NavItem key={key} eventKey={menuItem.key} style={{ marginTop: 40 }}>\n        <NavIcon >\n          <FontIcon style={{ fontSize: 35, marginTop: \"10%\" }}>{menuItem.icon}</FontIcon>\n        </NavIcon>\n        <NavText style={{ fontSize: 20, float: \"right\", width: \"75%\" }}>\n          {menuItem.name}\n        </NavText>\n      </NavItem>\n    );\n\n    return (\n      <div id=\"nav-menu\">\n        <div style={{\n          marginLeft: expanded ? 240 : 64,\n          paddingRight: '20px'\n        }}/>\n        <BrowserRouter>\n          <Route render={({ location, history }) => (\n            <React.Fragment>\n              <SideNav onSelect={this.onSelect} onToggle={this.onToggle} style={{position:\"fixed\"}}>\n                <SideNav.Toggle />\n                <SideNav.Nav selected={selected}>\n                  {menu}\n                </SideNav.Nav>\n              </SideNav>\n              <Main expanded={expanded}>\n                {this.renderSelectedItem()}\n              </Main>\n            </React.Fragment>\n          )} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default C_Menu;","import axios from 'axios';\r\nimport { BaseProvider } from './Base';\r\n\r\nexport class AuthProvider extends BaseProvider {\r\n\r\n  constructor() {\r\n    super('login')\r\n  }\r\n\r\n  async login(username, password) {\r\n    return this.handleRequest(axios.post(`${this.baseUrl}`, {\r\n      username: username,\r\n      password: password\r\n    }))\r\n  }\r\n}","import React, { Component } from 'react';\nimport {C_Button} from '../components/Button';\nimport C_TextField from '../components/TextField';\nimport {AuthProvider} from '../providers/Auth'\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      user: {\n        username: undefined,\n        password: undefined\n      }\n    \n    }\n  }\n\n  onLogin = this.onLogin.bind(this);\n  onChange = this.onChange.bind(this);\n\n  async onLogin() {\n\n    var {username, password} = this.state.user \n    \n    let authProvider = new AuthProvider();\n\n    let response = await authProvider.login(username, password);\n\n    if (!response.success) {\n      alert(response.error)\n      return\n    }\n\n    this.props.onSuccess()\n  }\n\n  onChange(e){\n\n    var user = this.state.user \n\n    user[e.target.name] = e.target.value;\n\n    this.setState({user});\n\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div style={{\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          left: 0,\n          top: 0,\n          backgroundImage: `url(../assets/background.png)`,\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          opacity: 0.05,\n          zIndex: -1\n        }}>\n        </div>\n        <div style={{ marginTop: \"7%\" }}>\n          <div style={{ textAlign: \"center\" }} >\n            <h1 style={{ fontSize: 60, fontWeight: \"bold\" }}>LOGIN</h1>\n            <h3 style={{ color: \"#A40003\", marginTop: 100, fontSize: 30, fontWeight: \"bold\" }}>AGIL.IT</h3>\n            <h4 style={{ fontWeight: \"bold\", marginTop: 40, fontSize: 18 }}>SISTEMA GERENCIADOR DE ORDEM DE MANUTENÇÃO</h4>\n          </div>\n          <div style={{ marginTop: 70 }}>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <C_TextField\n                name=\"username\"\n                onChange={this.onChange}\n                placeholder=\"Usuário\"\n                type=\"text\"\n                style={{ color: \"#616161\", fontWeight: \"bold\", fontSize: 14, width: 460 }}\n              />\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}>\n              <C_TextField\n                onChange={this.onChange}\n                name=\"password\"\n                placeholder=\"Senha\"\n                type=\"password\"\n                style={{ color: \"#616161\", fontWeight: \"bold\", fontSize: 14, width: 460 }}\n              />\n            </div>\n\n            <div style={{ marginTop: 40, display: \"flex\", justifyContent: \"center\" }}>\n              <C_Button\n                primary={true}\n                style={{ fontSize: 20, width: \"40%\", height: 50 }}\n                label={\"ENTRAR\"}\n                action={() => this.onLogin()}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport C_Menu from './components/Menu';\nimport Login from './login/Login';\nimport Cookies from 'universal-cookie';\nimport Dashboard from './Dashboard';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.cookies = new Cookies();\n    this.onLogout = this.onLogout.bind(this)\n    this.onLogin = this.onLogin.bind(this)\n\n    this.state = { token: this.cookies.get('token') || false}\n  }\n\n  onLogout() {\n    this.cookies.remove('token')\n    this.setState({ token: false })\n  }\n\n  onLogin() {\n    this.setState({ token: this.cookies.get('token') })\n  }\n\n  render() {\n    const { token } = this.state\n\n    if (!token) {\n      return <Login onSuccess={this.onLogin}/>\n    }\n\n    return <C_Menu onLogout={this.onLogout}/>\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './index.scss';\nimport WebFontLoader from 'webfontloader';\nimport App from './app'\n\nWebFontLoader.load({\n    google: {\n        families: ['Roboto:300,400,500,700', 'Material Icons'],\n    },\n});\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n","const machineTypeColumns = () => [\n  {\n    name: \"ID\",\n    property:\"id\",\n    defaultValue: \"Sem ID\",\n  },\n  {\n    name: \"Descrição\",\n    property:\"description\",\n    defaultValue: \"Sem Descrição\",\n  },\n]\n\nconst equipmentColumns = () => [\n  {\n    name: \"Código\",\n    property:\"code\",\n    defaultValue: \"Sem Código\",\n  },\n  {\n    name: \"Descrição\",\n    property:\"description\",\n    defaultValue: \"Sem Descrição\",\n  },\n  {\n    name: \"Tipo Máquina\",\n    property:\"machineType.description\",\n    defaultValue: \"Sem Tipo de Máquina\",\n  },\n]\n\nmodule.exports = {\n  machineTypeColumns,\n  equipmentColumns,\n}"],"sourceRoot":""}